[{"title":"Introduction","slug":"introduction","examples":[{"title":"Hello world","slug":"hello-world","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet name = 'world';\n</script>\n\n<h1>Hello {name}!</h1>\n"}]},{"title":"Dynamic attributes","slug":"dynamic-attributes","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet src = '/tutorial/image.gif';\n\tlet name = 'Rick Astley';\n</script>\n\n<!-- {src} is short for src={src} -->\n<img {src} alt=\"{name} dancing\" />\n"}]},{"title":"Styling","slug":"styling","files":[{"name":"App.svelte","type":"svelte","content":"<p>Styled!</p>\n\n<style>\n\tp {\n\t\tcolor: purple;\n\t\tfont-family: 'Comic Sans MS', cursive;\n\t\tfont-size: 2em;\n\t}\n</style>\n"}]},{"title":"Nested components","slug":"nested-components","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Nested from './Nested.svelte';\n</script>\n\n<p>These styles...</p>\n<Nested />\n\n<style>\n\tp {\n\t\tcolor: purple;\n\t\tfont-family: 'Comic Sans MS', cursive;\n\t\tfont-size: 2em;\n\t}\n</style>\n"},{"name":"Nested.svelte","type":"svelte","content":"<p>...don't affect this element</p>\n"}]},{"title":"HTML tags","slug":"html-tags","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet string = `here's some <strong>HTML!!!</strong>`;\n</script>\n\n<p>{@html string}</p>\n"}]}]},{"title":"Reactivity","slug":"reactivity","examples":[{"title":"Reactive assignments","slug":"reactive-assignments","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet count = 0;\n\n\tfunction handleClick() {\n\t\tcount += 1;\n\t}\n</script>\n\n<button on:click={handleClick}>\n\tClicked {count}\n\t{count === 1 ? 'time' : 'times'}\n</button>\n"}]},{"title":"Reactive declarations","slug":"reactive-declarations","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet count = 1;\n\n\t// the `$:` means 're-run whenever these values change'\n\t$: doubled = count * 2;\n\t$: quadrupled = doubled * 2;\n\n\tfunction handleClick() {\n\t\tcount += 1;\n\t}\n</script>\n\n<button on:click={handleClick}>\n\tCount: {count}\n</button>\n\n<p>{count} * 2 = {doubled}</p>\n<p>{doubled} * 2 = {quadrupled}</p>\n"}]},{"title":"Reactive statements","slug":"reactive-statements","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet count = 0;\n\n\t$: if (count >= 10) {\n\t\talert(`count is dangerously high!`);\n\t\tcount = 9;\n\t}\n\n\tfunction handleClick() {\n\t\tcount += 1;\n\t}\n</script>\n\n<button on:click={handleClick}>\n\tClicked {count}\n\t{count === 1 ? 'time' : 'times'}\n</button>\n"}]}]},{"title":"Props","slug":"props","examples":[{"title":"Declaring props","slug":"declaring-props","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Nested from './Nested.svelte';\n</script>\n\n<Nested answer={42} />\n"},{"name":"Nested.svelte","type":"svelte","content":"<script>\n\texport let answer;\n</script>\n\n<p>The answer is {answer}</p>\n"}]},{"title":"Default values","slug":"default-values","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Nested from './Nested.svelte';\n</script>\n\n<Nested answer={42} />\n<Nested />\n"},{"name":"Nested.svelte","type":"svelte","content":"<script>\n\texport let answer = 'a mystery';\n</script>\n\n<p>The answer is {answer}</p>\n"}]},{"title":"Spread props","slug":"spread-props","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Info from './Info.svelte';\n\n\tconst pkg = {\n\t\tname: 'svelte',\n\t\tversion: 3,\n\t\tspeed: 'blazing',\n\t\twebsite: 'https://svelte.dev'\n\t};\n</script>\n\n<Info {...pkg} />\n"},{"name":"Info.svelte","type":"svelte","content":"<script>\n\texport let name;\n\texport let version;\n\texport let speed;\n\texport let website;\n</script>\n\n<p>\n\tThe <code>{name}</code> package is {speed} fast. Download version {version} from\n\t<a href=\"https://www.npmjs.com/package/{name}\">npm</a>\n\tand <a href={website}>learn more here</a>\n</p>\n"}]}]},{"title":"Logic","slug":"logic","examples":[{"title":"If blocks","slug":"if-blocks","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet user = { loggedIn: false };\n\n\tfunction toggle() {\n\t\tuser.loggedIn = !user.loggedIn;\n\t}\n</script>\n\n{#if user.loggedIn}\n\t<button on:click={toggle}> Log out </button>\n{/if}\n\n{#if !user.loggedIn}\n\t<button on:click={toggle}> Log in </button>\n{/if}\n"}]},{"title":"Else blocks","slug":"else-blocks","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet user = { loggedIn: false };\n\n\tfunction toggle() {\n\t\tuser.loggedIn = !user.loggedIn;\n\t}\n</script>\n\n{#if user.loggedIn}\n\t<button on:click={toggle}> Log out </button>\n{:else}\n\t<button on:click={toggle}> Log in </button>\n{/if}\n"}]},{"title":"Else-if blocks","slug":"else-if-blocks","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet x = 7;\n</script>\n\n{#if x > 10}\n\t<p>{x} is greater than 10</p>\n{:else if 5 > x}\n\t<p>{x} is less than 5</p>\n{:else}\n\t<p>{x} is between 5 and 10</p>\n{/if}\n"}]},{"title":"Each blocks","slug":"each-blocks","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet cats = [\n\t\t{ id: 'J---aiyznGQ', name: 'Keyboard Cat' },\n\t\t{ id: 'z_AbfPXTKms', name: 'Maru' },\n\t\t{ id: 'OUtn3pvWmpg', name: 'Henri The Existential Cat' }\n\t];\n</script>\n\n<h1>The Famous Cats of YouTube</h1>\n\n<ul>\n\t{#each cats as { id, name }, i}\n\t\t<li>\n\t\t\t<a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v={id}\">\n\t\t\t\t{i + 1}: {name}\n\t\t\t</a>\n\t\t</li>\n\t{/each}\n</ul>\n"}]},{"title":"Keyed each blocks","slug":"keyed-each-blocks","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Thing from './Thing.svelte';\n\n\tlet things = [\n\t\t{ id: 1, color: 'darkblue' },\n\t\t{ id: 2, color: 'indigo' },\n\t\t{ id: 3, color: 'deeppink' },\n\t\t{ id: 4, color: 'salmon' },\n\t\t{ id: 5, color: 'gold' }\n\t];\n\n\tfunction handleClick() {\n\t\tthings = things.slice(1);\n\t}\n</script>\n\n<button on:click={handleClick}> Remove first thing </button>\n\n<div style=\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 1em\">\n\t<div>\n\t\t<h2>Keyed</h2>\n\t\t{#each things as thing (thing.id)}\n\t\t\t<Thing current={thing.color} />\n\t\t{/each}\n\t</div>\n\n\t<div>\n\t\t<h2>Unkeyed</h2>\n\t\t{#each things as thing}\n\t\t\t<Thing current={thing.color} />\n\t\t{/each}\n\t</div>\n</div>\n"},{"name":"Thing.svelte","type":"svelte","content":"<script>\n\t// `current` is updated whenever the prop value changes...\n\texport let current;\n\n\t// ...but `initial` is fixed upon initialisation\n\tconst initial = current;\n</script>\n\n<p>\n\t<span style=\"background-color: {initial}\">initial</span>\n\t<span style=\"background-color: {current}\">current</span>\n</p>\n\n<style>\n\tspan {\n\t\tdisplay: inline-block;\n\t\tpadding: 0.2em 0.5em;\n\t\tmargin: 0 0.2em 0.2em 0;\n\t\twidth: 4em;\n\t\ttext-align: center;\n\t\tborder-radius: 0.2em;\n\t\tcolor: white;\n\t}\n</style>\n"}]},{"title":"Await blocks","slug":"await-blocks","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet promise = getRandomNumber();\n\n\tasync function getRandomNumber() {\n\t\tconst res = await fetch(`/tutorial/random-number`);\n\t\tconst text = await res.text();\n\n\t\tif (res.ok) {\n\t\t\treturn text;\n\t\t} else {\n\t\t\tthrow new Error(text);\n\t\t}\n\t}\n\n\tfunction handleClick() {\n\t\tpromise = getRandomNumber();\n\t}\n</script>\n\n<button on:click={handleClick}> generate random number </button>\n\n{#await promise}\n\t<p>...waiting</p>\n{:then number}\n\t<p>The number is {number}</p>\n{:catch error}\n\t<p style=\"color: red\">{error.message}</p>\n{/await}\n"}]}]},{"title":"Events","slug":"events","examples":[{"title":"DOM events","slug":"dom-events","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet m = { x: 0, y: 0 };\n\n\tfunction handleMousemove(event) {\n\t\tm.x = event.clientX;\n\t\tm.y = event.clientY;\n\t}\n</script>\n\n<!-- svelte-ignore a11y-no-static-element-interactions -->\n<div on:mousemove={handleMousemove}>\n\tThe mouse position is {m.x} x {m.y}\n</div>\n\n<style>\n\tdiv {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n"}]},{"title":"Inline handlers","slug":"inline-handlers","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet m = { x: 0, y: 0 };\n</script>\n\n<!-- svelte-ignore a11y-no-static-element-interactions -->\n<div on:mousemove={(e) => (m = { x: e.clientX, y: e.clientY })}>\n\tThe mouse position is {m.x} x {m.y}\n</div>\n\n<style>\n\tdiv {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n"}]},{"title":"Event modifiers","slug":"event-modifiers","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tfunction handleClick() {\n\t\talert('no more alerts');\n\t}\n</script>\n\n<button on:click|once={handleClick}> Click me </button>\n"}]},{"title":"Component events","slug":"component-events","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Inner from './Inner.svelte';\n\n\tfunction handleMessage(event) {\n\t\talert(event.detail.text);\n\t}\n</script>\n\n<Inner on:message={handleMessage} />\n"},{"name":"Inner.svelte","type":"svelte","content":"<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction sayHello() {\n\t\tdispatch('message', {\n\t\t\ttext: 'Hello!'\n\t\t});\n\t}\n</script>\n\n<button on:click={sayHello}> Click to say hello </button>\n"}]},{"title":"Event forwarding","slug":"event-forwarding","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Outer from './Outer.svelte';\n\n\tfunction handleMessage(event) {\n\t\talert(event.detail.text);\n\t}\n</script>\n\n<Outer on:message={handleMessage} />\n"},{"name":"Inner.svelte","type":"svelte","content":"<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction sayHello() {\n\t\tdispatch('message', {\n\t\t\ttext: 'Hello!'\n\t\t});\n\t}\n</script>\n\n<button on:click={sayHello}> Click to say hello </button>\n"},{"name":"Outer.svelte","type":"svelte","content":"<script>\n\timport Inner from './Inner.svelte';\n</script>\n\n<Inner on:message />\n"}]},{"title":"DOM event forwarding","slug":"dom-event-forwarding","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport CustomButton from './CustomButton.svelte';\n\n\tfunction handleClick() {\n\t\talert('clicked');\n\t}\n</script>\n\n<CustomButton on:click={handleClick} />\n"},{"name":"CustomButton.svelte","type":"svelte","content":"<button on:click> Click me </button>\n\n<style>\n\tbutton {\n\t\theight: 4rem;\n\t\twidth: 8rem;\n\t\tbackground-color: #aaa;\n\t\tborder-color: #f1c40f;\n\t\tcolor: #f1c40f;\n\t\tfont-size: 1.25rem;\n\t\tbackground-image: linear-gradient(45deg, #f1c40f 50%, transparent 50%);\n\t\tbackground-position: 100%;\n\t\tbackground-size: 400%;\n\t\ttransition: background 300ms ease-in-out;\n\t}\n\tbutton:hover {\n\t\tbackground-position: 0;\n\t\tcolor: #aaa;\n\t}\n</style>\n"}]}]},{"title":"Bindings","slug":"bindings","examples":[{"title":"Text inputs","slug":"text-inputs","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet name = '';\n</script>\n\n<input bind:value={name} placeholder=\"enter your name\" />\n<p>Hello {name || 'stranger'}!</p>\n"}]},{"title":"Numeric inputs","slug":"numeric-inputs","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet a = 1;\n\tlet b = 2;\n</script>\n\n<label>\n\t<input type=\"number\" bind:value={a} min=\"0\" max=\"10\" />\n\t<input type=\"range\" bind:value={a} min=\"0\" max=\"10\" />\n</label>\n\n<label>\n\t<input type=\"number\" bind:value={b} min=\"0\" max=\"10\" />\n\t<input type=\"range\" bind:value={b} min=\"0\" max=\"10\" />\n</label>\n\n<p>{a} + {b} = {a + b}</p>\n"}]},{"title":"Checkbox inputs","slug":"checkbox-inputs","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet yes = false;\n</script>\n\n<label>\n\t<input type=\"checkbox\" bind:checked={yes} />\n\tYes! Send me regular email spam\n</label>\n\n{#if yes}\n\t<p>Thank you. We will bombard your inbox and sell your personal details.</p>\n{:else}\n\t<p>You must opt-in to continue. If you're not paying, you're the product.</p>\n{/if}\n\n<button disabled={!yes}> Subscribe </button>\n"}]},{"title":"Group inputs","slug":"group-inputs","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet scoops = 1;\n\tlet flavours = ['Mint choc chip'];\n\n\tlet menu = ['Cookies and cream', 'Mint choc chip', 'Raspberry ripple'];\n\n\tfunction join(flavours) {\n\t\tif (flavours.length === 1) return flavours[0];\n\t\treturn `${flavours.slice(0, -1).join(', ')} and ${flavours[flavours.length - 1]}`;\n\t}\n</script>\n\n<h2>Size</h2>\n\n<label>\n\t<input type=\"radio\" bind:group={scoops} value={1} />\n\tOne scoop\n</label>\n\n<label>\n\t<input type=\"radio\" bind:group={scoops} value={2} />\n\tTwo scoops\n</label>\n\n<label>\n\t<input type=\"radio\" bind:group={scoops} value={3} />\n\tThree scoops\n</label>\n\n<h2>Flavours</h2>\n\n{#each menu as flavour}\n\t<label>\n\t\t<input type=\"checkbox\" bind:group={flavours} value={flavour} />\n\t\t{flavour}\n\t</label>\n{/each}\n\n{#if flavours.length === 0}\n\t<p>Please select at least one flavour</p>\n{:else if flavours.length > scoops}\n\t<p>Can't order more flavours than scoops!</p>\n{:else}\n\t<p>\n\t\tYou ordered {scoops}\n\t\t{scoops === 1 ? 'scoop' : 'scoops'}\n\t\tof {join(flavours)}\n\t</p>\n{/if}\n"}]},{"title":"Textarea inputs","slug":"textarea-inputs","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { marked } from 'marked';\n\tlet text = `Some words are *italic*, some are **bold**`;\n</script>\n\n<textarea bind:value={text} />\n\n{@html marked(text)}\n\n<style>\n\ttextarea {\n\t\twidth: 100%;\n\t\theight: 200px;\n\t}\n</style>\n"}]},{"title":"File inputs","slug":"file-inputs","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet files;\n\n\t$: if (files) {\n\t\t// Note that `files` is of type `FileList`, not an Array:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/FileList\n\t\tconsole.log(files);\n\n\t\tfor (const file of files) {\n\t\t\tconsole.log(`${file.name}: ${file.size} bytes`);\n\t\t}\n\t}\n</script>\n\n<label for=\"avatar\">Upload a picture:</label>\n<input accept=\"image/png, image/jpeg\" bind:files id=\"avatar\" name=\"avatar\" type=\"file\" />\n\n<label for=\"many\">Upload multiple files of any type:</label>\n<input bind:files id=\"many\" multiple type=\"file\" />\n\n{#if files}\n\t<h2>Selected files:</h2>\n\t{#each Array.from(files) as file}\n\t\t<p>{file.name} ({file.size} bytes)</p>\n\t{/each}\n{/if}\n"}]},{"title":"Select bindings","slug":"select-bindings","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet questions = [\n\t\t{ id: 1, text: `Where did you go to school?` },\n\t\t{ id: 2, text: `What is your mother's name?` },\n\t\t{ id: 3, text: `What is another personal fact that an attacker could easily find with Google?` }\n\t];\n\n\tlet selected;\n\n\tlet answer = '';\n\n\tfunction handleSubmit() {\n\t\talert(`answered question ${selected.id} (${selected.text}) with \"${answer}\"`);\n\t}\n</script>\n\n<h2>Insecurity questions</h2>\n\n<form on:submit|preventDefault={handleSubmit}>\n\t<select bind:value={selected} on:change={() => (answer = '')}>\n\t\t{#each questions as question}\n\t\t\t<option value={question}>\n\t\t\t\t{question.text}\n\t\t\t</option>\n\t\t{/each}\n\t</select>\n\n\t<input bind:value={answer} />\n\n\t<button disabled={!answer} type=\"submit\"> Submit </button>\n</form>\n\n<p>selected question {selected ? selected.id : '[waiting...]'}</p>\n\n<style>\n\tinput {\n\t\tdisplay: block;\n\t\twidth: 500px;\n\t\tmax-width: 100%;\n\t}\n</style>\n"}]},{"title":"Select multiple","slug":"multiple-select-bindings","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet scoops = 1;\n\tlet flavours = ['Mint choc chip'];\n\n\tlet menu = ['Cookies and cream', 'Mint choc chip', 'Raspberry ripple'];\n\n\tfunction join(flavours) {\n\t\tif (flavours.length === 1) return flavours[0];\n\t\treturn `${flavours.slice(0, -1).join(', ')} and ${flavours[flavours.length - 1]}`;\n\t}\n</script>\n\n<h2>Size</h2>\n\n<label>\n\t<input type=\"radio\" bind:group={scoops} value={1} />\n\tOne scoop\n</label>\n\n<label>\n\t<input type=\"radio\" bind:group={scoops} value={2} />\n\tTwo scoops\n</label>\n\n<label>\n\t<input type=\"radio\" bind:group={scoops} value={3} />\n\tThree scoops\n</label>\n\n<h2>Flavours</h2>\n\n<select multiple bind:value={flavours}>\n\t{#each menu as flavour}\n\t\t<option value={flavour}>\n\t\t\t{flavour}\n\t\t</option>\n\t{/each}\n</select>\n\n{#if flavours.length === 0}\n\t<p>Please select at least one flavour</p>\n{:else if flavours.length > scoops}\n\t<p>Can't order more flavours than scoops!</p>\n{:else}\n\t<p>\n\t\tYou ordered {scoops}\n\t\t{scoops === 1 ? 'scoop' : 'scoops'}\n\t\tof {join(flavours)}\n\t</p>\n{/if}\n"}]},{"title":"Each block bindings","slug":"each-block-bindings","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet todos = [\n\t\t{ done: false, text: 'finish Svelte tutorial' },\n\t\t{ done: false, text: 'build an app' },\n\t\t{ done: false, text: 'world domination' }\n\t];\n\n\tfunction add() {\n\t\ttodos = todos.concat({ done: false, text: '' });\n\t}\n\n\tfunction clear() {\n\t\ttodos = todos.filter((t) => !t.done);\n\t}\n\n\t$: remaining = todos.filter((t) => !t.done).length;\n</script>\n\n<h1>Todos</h1>\n\n{#each todos as todo}\n\t<div>\n\t\t<input type=\"checkbox\" bind:checked={todo.done} />\n\n\t\t<input placeholder=\"What needs to be done?\" bind:value={todo.text} disabled={todo.done} />\n\t</div>\n{/each}\n\n<p>{remaining} remaining</p>\n\n<button on:click={add}> Add new </button>\n\n<button on:click={clear}> Clear completed </button>\n"}]},{"title":"Media elements","slug":"media-elements","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\t// These values are bound to properties of the video\n\tlet time = 0;\n\tlet duration;\n\tlet paused = true;\n\n\tlet showControls = true;\n\tlet showControlsTimeout;\n\n\t// Used to track time of last mouse down event\n\tlet lastMouseDown;\n\n\tfunction handleMove(e) {\n\t\t// Make the controls visible, but fade out after\n\t\t// 2.5 seconds of inactivity\n\t\tclearTimeout(showControlsTimeout);\n\t\tshowControlsTimeout = setTimeout(() => (showControls = false), 2500);\n\t\tshowControls = true;\n\n\t\tif (!duration) return; // video not loaded yet\n\t\tif (e.type !== 'touchmove' && !(e.buttons & 1)) return; // mouse not down\n\n\t\tconst clientX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX;\n\t\tconst { left, right } = this.getBoundingClientRect();\n\t\ttime = (duration * (clientX - left)) / (right - left);\n\t}\n\n\t// we can't rely on the built-in click event, because it fires\n\t// after a drag — we have to listen for clicks ourselves\n\tfunction handleMousedown(e) {\n\t\tlastMouseDown = new Date();\n\t}\n\n\tfunction handleMouseup(e) {\n\t\tif (new Date() - lastMouseDown < 300) {\n\t\t\tif (paused) e.target.play();\n\t\t\telse e.target.pause();\n\t\t}\n\t}\n\n\tfunction format(seconds) {\n\t\tif (isNaN(seconds)) return '...';\n\n\t\tconst minutes = Math.floor(seconds / 60);\n\t\tseconds = Math.floor(seconds % 60);\n\t\tif (seconds < 10) seconds = '0' + seconds;\n\n\t\treturn `${minutes}:${seconds}`;\n\t}\n</script>\n\n<h1>Caminandes: Llamigos</h1>\n<p>From <a href=\"https://studio.blender.org/films\">Blender Studio</a>. CC-BY</p>\n\n<div>\n\t<video\n\t\tposter=\"https://sveltejs.github.io/assets/caminandes-llamigos.jpg\"\n\t\tsrc=\"https://sveltejs.github.io/assets/caminandes-llamigos.mp4\"\n\t\ton:mousemove={handleMove}\n\t\ton:touchmove|preventDefault={handleMove}\n\t\ton:mousedown={handleMousedown}\n\t\ton:mouseup={handleMouseup}\n\t\tbind:currentTime={time}\n\t\tbind:duration\n\t\tbind:paused\n\t>\n\t\t<track kind=\"captions\" />\n\t</video>\n\n\t<div class=\"controls\" style=\"opacity: {duration && showControls ? 1 : 0}\">\n\t\t<progress value={time / duration || 0} />\n\n\t\t<div class=\"info\">\n\t\t\t<span class=\"time\">{format(time)}</span>\n\t\t\t<span>click anywhere to {paused ? 'play' : 'pause'} / drag to seek</span>\n\t\t\t<span class=\"time\">{format(duration)}</span>\n\t\t</div>\n\t</div>\n</div>\n\n<style>\n\tdiv {\n\t\tposition: relative;\n\t}\n\n\t.controls {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\twidth: 100%;\n\t\ttransition: opacity 1s;\n\t}\n\n\t.info {\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\tjustify-content: space-between;\n\t}\n\n\tspan {\n\t\tpadding: 0.2em 0.5em;\n\t\tcolor: white;\n\t\ttext-shadow: 0 0 8px black;\n\t\tfont-size: 1.4em;\n\t\topacity: 0.7;\n\t}\n\n\t.time {\n\t\twidth: 3em;\n\t}\n\n\t.time:last-child {\n\t\ttext-align: right;\n\t}\n\n\tprogress {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\theight: 10px;\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t}\n\n\tprogress::-webkit-progress-bar {\n\t\tbackground-color: rgba(0, 0, 0, 0.2);\n\t}\n\n\tprogress::-webkit-progress-value {\n\t\tbackground-color: rgba(255, 255, 255, 0.6);\n\t}\n\n\tvideo {\n\t\twidth: 100%;\n\t}\n</style>\n"}]},{"title":"Dimensions","slug":"dimensions","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet w;\n\tlet h;\n\tlet size = 42;\n\tlet text = 'edit me';\n</script>\n\n<input type=\"range\" bind:value={size} />\n<input bind:value={text} />\n\n<p>size: {w}px x {h}px</p>\n\n<div bind:clientWidth={w} bind:clientHeight={h}>\n\t<span style=\"font-size: {size}px\">{text}</span>\n</div>\n\n<style>\n\tinput {\n\t\tdisplay: block;\n\t}\n\tdiv {\n\t\tdisplay: inline-block;\n\t}\n</style>\n"}]},{"title":"bind:this={canvas}","slug":"bind-this","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { onMount } from 'svelte';\n\n\tlet canvas;\n\n\tonMount(() => {\n\t\tconst ctx = canvas.getContext('2d');\n\t\tlet frame;\n\n\t\t(function loop() {\n\t\t\tframe = requestAnimationFrame(loop);\n\n\t\t\tconst imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n\t\t\tfor (let p = 0; p < imageData.data.length; p += 4) {\n\t\t\t\tconst i = p / 4;\n\t\t\t\tconst x = i % canvas.width;\n\t\t\t\tconst y = (i / canvas.height) >>> 0;\n\n\t\t\t\tconst t = window.performance.now();\n\n\t\t\t\tconst r = 64 + (128 * x) / canvas.width + 64 * Math.sin(t / 1000);\n\t\t\t\tconst g = 64 + (128 * y) / canvas.height + 64 * Math.cos(t / 1400);\n\t\t\t\tconst b = 128;\n\n\t\t\t\timageData.data[p + 0] = r;\n\t\t\t\timageData.data[p + 1] = g;\n\t\t\t\timageData.data[p + 2] = b;\n\t\t\t\timageData.data[p + 3] = 255;\n\t\t\t}\n\n\t\t\tctx.putImageData(imageData, 0, 0);\n\t\t})();\n\n\t\treturn () => {\n\t\t\tcancelAnimationFrame(frame);\n\t\t};\n\t});\n</script>\n\n<canvas bind:this={canvas} width={32} height={32} />\n\n<style>\n\tcanvas {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-color: #666;\n\t\t-webkit-mask: url(/svelte-logo-mask.svg) 50% 50% no-repeat;\n\t\tmask: url(/svelte-logo-mask.svg) 50% 50% no-repeat;\n\t}\n</style>\n"}]},{"title":"Component bindings","slug":"component-bindings","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Keypad from './Keypad.svelte';\n\n\tlet pin;\n\t$: view = pin ? pin.replace(/\\d(?!$)/g, '•') : 'enter your pin';\n\n\tfunction handleSubmit() {\n\t\talert(`submitted ${pin}`);\n\t}\n</script>\n\n<h1 class:pin>{view}</h1>\n\n<Keypad bind:value={pin} on:submit={handleSubmit} />\n\n<style>\n\th1 {\n\t\tcolor: #ccc;\n\t}\n\th1.pin {\n\t\tcolor: #333;\n\t}\n\t:global(body.dark) h1 {\n\t\tcolor: #444;\n\t}\n\t:global(body.dark) h1.pin {\n\t\tcolor: #fff;\n\t}\n</style>\n"},{"name":"Keypad.svelte","type":"svelte","content":"<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\texport let value = '';\n\n\tconst dispatch = createEventDispatcher();\n\n\tconst select = (num) => () => (value += num);\n\tconst clear = () => (value = '');\n\tconst submit = () => dispatch('submit');\n</script>\n\n<div class=\"keypad\">\n\t<button on:click={select(1)}>1</button>\n\t<button on:click={select(2)}>2</button>\n\t<button on:click={select(3)}>3</button>\n\t<button on:click={select(4)}>4</button>\n\t<button on:click={select(5)}>5</button>\n\t<button on:click={select(6)}>6</button>\n\t<button on:click={select(7)}>7</button>\n\t<button on:click={select(8)}>8</button>\n\t<button on:click={select(9)}>9</button>\n\n\t<button disabled={!value} on:click={clear}>clear</button>\n\t<button on:click={select(0)}>0</button>\n\t<button disabled={!value} on:click={submit}>submit</button>\n</div>\n\n<style>\n\t.keypad {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(3, 5em);\n\t\tgrid-template-rows: repeat(4, 3em);\n\t\tgrid-gap: 0.5em;\n\t}\n\n\tbutton {\n\t\tmargin: 0;\n\t}\n</style>\n"}]}]},{"title":"Lifecycle","slug":"lifecycle","examples":[{"title":"onMount","slug":"onmount","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { onMount } from 'svelte';\n\n\tlet photos = [];\n\n\tonMount(async () => {\n\t\tconst res = await fetch(`/tutorial/api/album`);\n\t\tphotos = await res.json();\n\t});\n</script>\n\n<h1>Photo album</h1>\n\n<div class=\"photos\">\n\t{#each photos as photo}\n\t\t<figure>\n\t\t\t<img src={photo.thumbnailUrl} alt={photo.title} />\n\t\t\t<figcaption>{photo.title}</figcaption>\n\t\t</figure>\n\t{:else}\n\t\t<!-- this block renders when photos.length === 0 -->\n\t\t<p>loading...</p>\n\t{/each}\n</div>\n\n<style>\n\t.photos {\n\t\twidth: 100%;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(5, 1fr);\n\t\tgrid-gap: 8px;\n\t}\n\n\tfigure,\n\timg {\n\t\twidth: 100%;\n\t\tmargin: 0;\n\t}\n</style>\n"}]},{"title":"onDestroy","slug":"ondestroy","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { onInterval } from './utils.js';\n\n\tlet seconds = 0;\n\tonInterval(() => (seconds += 1), 1000);\n</script>\n\n<p>\n\tThe page has been open for\n\t{seconds}\n\t{seconds === 1 ? 'second' : 'seconds'}\n</p>\n"},{"name":"utils.js","type":"js","content":"import { onDestroy } from 'svelte';\n\nexport function onInterval(callback, milliseconds) {\n\tconst interval = setInterval(callback, milliseconds);\n\n\tonDestroy(() => {\n\t\tclearInterval(interval);\n\t});\n}\n"}]},{"title":"beforeUpdate and afterUpdate","slug":"update","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Eliza from 'elizabot';\n\timport { beforeUpdate, afterUpdate } from 'svelte';\n\n\tlet div;\n\tlet autoscroll;\n\n\tbeforeUpdate(() => {\n\t\tautoscroll = div && div.offsetHeight + div.scrollTop > div.scrollHeight - 20;\n\t});\n\n\tafterUpdate(() => {\n\t\tif (autoscroll) div.scrollTo(0, div.scrollHeight);\n\t});\n\n\tconst eliza = new Eliza();\n\n\tlet comments = [{ author: 'eliza', text: eliza.getInitial() }];\n\n\tfunction handleKeydown(event) {\n\t\tif (event.key === 'Enter') {\n\t\t\tconst text = event.target.value;\n\t\t\tif (!text) return;\n\n\t\t\tcomments = comments.concat({\n\t\t\t\tauthor: 'user',\n\t\t\t\ttext\n\t\t\t});\n\n\t\t\tevent.target.value = '';\n\n\t\t\tconst reply = eliza.transform(text);\n\n\t\t\tsetTimeout(\n\t\t\t\t() => {\n\t\t\t\t\tcomments = comments.concat({\n\t\t\t\t\t\tauthor: 'eliza',\n\t\t\t\t\t\ttext: '...',\n\t\t\t\t\t\tplaceholder: true\n\t\t\t\t\t});\n\n\t\t\t\t\tsetTimeout(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tcomments = comments\n\t\t\t\t\t\t\t\t.filter((comment) => !comment.placeholder)\n\t\t\t\t\t\t\t\t.concat({\n\t\t\t\t\t\t\t\t\tauthor: 'eliza',\n\t\t\t\t\t\t\t\t\ttext: reply\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\t500 + Math.random() * 500\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\t200 + Math.random() * 200\n\t\t\t);\n\t\t}\n\t}\n</script>\n\n<div class=\"chat\">\n\t<h1>Eliza</h1>\n\n\t<div class=\"scrollable\" bind:this={div}>\n\t\t{#each comments as comment}\n\t\t\t<article class={comment.author}>\n\t\t\t\t<span>{comment.text}</span>\n\t\t\t</article>\n\t\t{/each}\n\t</div>\n\n\t<input on:keydown={handleKeydown} />\n</div>\n\n<style>\n\t.chat {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\theight: 100%;\n\t\tmax-width: 320px;\n\t}\n\n\t.scrollable {\n\t\tflex: 1 1 auto;\n\t\tborder-top: 1px solid #eee;\n\t\tmargin: 0 0 0.5em 0;\n\t\toverflow-y: auto;\n\t}\n\n\tarticle {\n\t\tmargin: 0.5em 0;\n\t}\n\n\t.user {\n\t\ttext-align: right;\n\t}\n\n\tspan {\n\t\tcolor: black;\n\t\tpadding: 0.5em 1em;\n\t\tdisplay: inline-block;\n\t}\n\n\t.eliza span {\n\t\tbackground-color: #eee;\n\t\tborder-radius: 1em 1em 1em 0;\n\t}\n\n\t.user span {\n\t\tbackground-color: #0074d9;\n\t\tcolor: white;\n\t\tborder-radius: 1em 1em 0 1em;\n\t}\n</style>\n"}]},{"title":"tick","slug":"tick","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { tick } from 'svelte';\n\n\tlet text = `Select some text and hit the tab key to toggle uppercase`;\n\n\tasync function handleKeydown(event) {\n\t\tif (event.key !== 'Tab') return;\n\n\t\tevent.preventDefault();\n\n\t\tconst { selectionStart, selectionEnd, value } = this;\n\t\tconst selection = value.slice(selectionStart, selectionEnd);\n\n\t\tconst replacement = /[a-z]/.test(selection) ? selection.toUpperCase() : selection.toLowerCase();\n\n\t\ttext = value.slice(0, selectionStart) + replacement + value.slice(selectionEnd);\n\n\t\tawait tick();\n\t\tthis.selectionStart = selectionStart;\n\t\tthis.selectionEnd = selectionEnd;\n\t}\n</script>\n\n<textarea value={text} on:keydown={handleKeydown} />\n\n<style>\n\ttextarea {\n\t\twidth: 100%;\n\t\theight: 200px;\n\t}\n</style>\n"}]}]},{"title":"Stores","slug":"stores","examples":[{"title":"Writable stores","slug":"writable-stores","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { count } from './stores.js';\n\timport Incrementer from './Incrementer.svelte';\n\timport Decrementer from './Decrementer.svelte';\n\timport Resetter from './Resetter.svelte';\n\n\tlet countValue;\n\n\tconst unsubscribe = count.subscribe((value) => {\n\t\tcountValue = value;\n\t});\n</script>\n\n<h1>The count is {countValue}</h1>\n\n<Incrementer />\n<Decrementer />\n<Resetter />\n"},{"name":"Decrementer.svelte","type":"svelte","content":"<script>\n\timport { count } from './stores.js';\n\n\tfunction decrement() {\n\t\tcount.update((n) => n - 1);\n\t}\n</script>\n\n<button on:click={decrement}> - </button>\n"},{"name":"Incrementer.svelte","type":"svelte","content":"<script>\n\timport { count } from './stores.js';\n\n\tfunction increment() {\n\t\tcount.update((n) => n + 1);\n\t}\n</script>\n\n<button on:click={increment}> + </button>\n"},{"name":"Resetter.svelte","type":"svelte","content":"<script>\n\timport { count } from './stores.js';\n\n\tfunction reset() {\n\t\tcount.set(0);\n\t}\n</script>\n\n<button on:click={reset}> reset </button>\n"},{"name":"stores.js","type":"js","content":"import { writable } from 'svelte/store';\n\nexport const count = writable(0);\n"}]},{"title":"Auto-subscriptions","slug":"auto-subscriptions","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { count } from './stores.js';\n\timport Incrementer from './Incrementer.svelte';\n\timport Decrementer from './Decrementer.svelte';\n\timport Resetter from './Resetter.svelte';\n</script>\n\n<h1>The count is {$count}</h1>\n\n<Incrementer />\n<Decrementer />\n<Resetter />\n"},{"name":"Decrementer.svelte","type":"svelte","content":"<script>\n\timport { count } from './stores.js';\n\n\tfunction decrement() {\n\t\tcount.update((n) => n - 1);\n\t}\n</script>\n\n<button on:click={decrement}> - </button>\n"},{"name":"Incrementer.svelte","type":"svelte","content":"<script>\n\timport { count } from './stores.js';\n\n\tfunction increment() {\n\t\tcount.update((n) => n + 1);\n\t}\n</script>\n\n<button on:click={increment}> + </button>\n"},{"name":"Resetter.svelte","type":"svelte","content":"<script>\n\timport { count } from './stores.js';\n\n\tfunction reset() {\n\t\tcount.set(0);\n\t}\n</script>\n\n<button on:click={reset}> reset </button>\n"},{"name":"stores.js","type":"js","content":"import { writable } from 'svelte/store';\n\nexport const count = writable(0);\n"}]},{"title":"Readable stores","slug":"readable-stores","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { time } from './stores.js';\n\n\tconst formatter = new Intl.DateTimeFormat('en', {\n\t\thour12: true,\n\t\thour: 'numeric',\n\t\tminute: '2-digit',\n\t\tsecond: '2-digit'\n\t});\n</script>\n\n<h1>The time is {formatter.format($time)}</h1>\n"},{"name":"stores.js","type":"js","content":"import { readable } from 'svelte/store';\n\nexport const time = readable(new Date(), function start(set) {\n\tconst interval = setInterval(() => {\n\t\tset(new Date());\n\t}, 1000);\n\n\treturn function stop() {\n\t\tclearInterval(interval);\n\t};\n});\n"}]},{"title":"Derived stores","slug":"derived-stores","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { time, elapsed } from './stores.js';\n\n\tconst formatter = new Intl.DateTimeFormat('en', {\n\t\thour12: true,\n\t\thour: 'numeric',\n\t\tminute: '2-digit',\n\t\tsecond: '2-digit'\n\t});\n</script>\n\n<h1>The time is {formatter.format($time)}</h1>\n\n<p>\n\tThis page has been open for\n\t{$elapsed}\n\t{$elapsed === 1 ? 'second' : 'seconds'}\n</p>\n"},{"name":"stores.js","type":"js","content":"import { readable, derived } from 'svelte/store';\n\nexport const time = readable(new Date(), function start(set) {\n\tconst interval = setInterval(() => {\n\t\tset(new Date());\n\t}, 1000);\n\n\treturn function stop() {\n\t\tclearInterval(interval);\n\t};\n});\n\nconst start = new Date();\n\nexport const elapsed = derived(time, ($time) => Math.round(($time - start) / 1000));\n"}]},{"title":"Custom stores","slug":"custom-stores","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { count } from './stores.js';\n</script>\n\n<h1>The count is {$count}</h1>\n\n<button on:click={count.increment}>+</button>\n<button on:click={count.decrement}>-</button>\n<button on:click={count.reset}>reset</button>\n"},{"name":"stores.js","type":"js","content":"import { writable } from 'svelte/store';\n\nfunction createCount() {\n\tconst { subscribe, set, update } = writable(0);\n\n\treturn {\n\t\tsubscribe,\n\t\tincrement: () => update((n) => n + 1),\n\t\tdecrement: () => update((n) => n - 1),\n\t\treset: () => set(0)\n\t};\n}\n\nexport const count = createCount();\n"}]}]},{"title":"Motion","slug":"motion","examples":[{"title":"Tweened","slug":"tweened","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { tweened } from 'svelte/motion';\n\timport { cubicOut } from 'svelte/easing';\n\n\tconst progress = tweened(0, {\n\t\tduration: 400,\n\t\teasing: cubicOut\n\t});\n</script>\n\n<progress value={$progress} />\n\n<button on:click={() => progress.set(0)}> 0% </button>\n\n<button on:click={() => progress.set(0.25)}> 25% </button>\n\n<button on:click={() => progress.set(0.5)}> 50% </button>\n\n<button on:click={() => progress.set(0.75)}> 75% </button>\n\n<button on:click={() => progress.set(1)}> 100% </button>\n\n<style>\n\tprogress {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t}\n</style>\n"}]},{"title":"Spring","slug":"spring","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { spring } from 'svelte/motion';\n\n\tlet coords = spring(\n\t\t{ x: 50, y: 50 },\n\t\t{\n\t\t\tstiffness: 0.1,\n\t\t\tdamping: 0.25\n\t\t}\n\t);\n\n\tlet size = spring(10);\n</script>\n\n<div style=\"position: absolute; right: 1em;\">\n\t<label>\n\t\t<h3>stiffness ({coords.stiffness})</h3>\n\t\t<input bind:value={coords.stiffness} type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" />\n\t</label>\n\n\t<label>\n\t\t<h3>damping ({coords.damping})</h3>\n\t\t<input bind:value={coords.damping} type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" />\n\t</label>\n</div>\n\n<!-- svelte-ignore a11y-no-static-element-interactions -->\n<svg\n\ton:mousemove={(e) => coords.set({ x: e.clientX, y: e.clientY })}\n\ton:mousedown={() => size.set(30)}\n\ton:mouseup={() => size.set(10)}\n>\n\t<circle cx={$coords.x} cy={$coords.y} r={$size} />\n</svg>\n\n<style>\n\tsvg {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tmargin: -8px;\n\t}\n\tcircle {\n\t\tfill: #ff3e00;\n\t}\n</style>\n"}]}]},{"title":"Transitions","slug":"transitions","examples":[{"title":"The transition directive","slug":"transition","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { fade } from 'svelte/transition';\n\tlet visible = true;\n</script>\n\n<label>\n\t<input type=\"checkbox\" bind:checked={visible} />\n\tvisible\n</label>\n\n{#if visible}\n\t<p transition:fade>Fades in and out</p>\n{/if}\n"}]},{"title":"Adding parameters","slug":"adding-parameters-to-transitions","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { fly } from 'svelte/transition';\n\tlet visible = true;\n</script>\n\n<label>\n\t<input type=\"checkbox\" bind:checked={visible} />\n\tvisible\n</label>\n\n{#if visible}\n\t<p transition:fly={{ y: 200, duration: 2000 }}>Flies in and out</p>\n{/if}\n"}]},{"title":"In and out","slug":"in-and-out","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { fade, fly } from 'svelte/transition';\n\tlet visible = true;\n</script>\n\n<label>\n\t<input type=\"checkbox\" bind:checked={visible} />\n\tvisible\n</label>\n\n{#if visible}\n\t<p in:fly={{ y: 200, duration: 2000 }} out:fade>Flies in, fades out</p>\n{/if}\n"}]},{"title":"Custom CSS transitions","slug":"custom-css-transitions","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { fade } from 'svelte/transition';\n\timport { elasticOut } from 'svelte/easing';\n\n\tlet visible = true;\n\n\tfunction spin(node, { duration }) {\n\t\treturn {\n\t\t\tduration,\n\t\t\tcss: (t) => {\n\t\t\t\tconst eased = elasticOut(t);\n\n\t\t\t\treturn `\n\t\t\t\t\ttransform: scale(${eased}) rotate(${eased * 1080}deg);\n\t\t\t\t\tcolor: hsl(\n\t\t\t\t\t\t${~~(t * 360)},\n\t\t\t\t\t\t${Math.min(100, 1000 - 1000 * t)}%,\n\t\t\t\t\t\t${Math.min(50, 500 - 500 * t)}%\n\t\t\t\t\t);`;\n\t\t\t}\n\t\t};\n\t}\n</script>\n\n<label>\n\t<input type=\"checkbox\" bind:checked={visible} />\n\tvisible\n</label>\n\n{#if visible}\n\t<div class=\"centered\" in:spin={{ duration: 8000 }} out:fade>\n\t\t<span>transitions!</span>\n\t</div>\n{/if}\n\n<style>\n\t.centered {\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t}\n\n\tspan {\n\t\tposition: absolute;\n\t\ttransform: translate(-50%, -50%);\n\t\tfont-size: 4em;\n\t}\n</style>\n"}]},{"title":"Custom JS transitions","slug":"custom-js-transitions","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet visible = false;\n\n\tfunction typewriter(node, { speed = 1 }) {\n\t\tconst valid = node.childNodes.length === 1 && node.childNodes[0].nodeType === Node.TEXT_NODE;\n\n\t\tif (!valid) {\n\t\t\tthrow new Error(`This transition only works on elements with a single text node child`);\n\t\t}\n\n\t\tconst text = node.textContent;\n\t\tconst duration = text.length / (speed * 0.01);\n\n\t\treturn {\n\t\t\tduration,\n\t\t\ttick: (t) => {\n\t\t\t\tconst i = ~~(text.length * t);\n\t\t\t\tnode.textContent = text.slice(0, i);\n\t\t\t}\n\t\t};\n\t}\n</script>\n\n<label>\n\t<input type=\"checkbox\" bind:checked={visible} />\n\tvisible\n</label>\n\n{#if visible}\n\t<p transition:typewriter>The quick brown fox jumps over the lazy dog</p>\n{/if}\n"}]},{"title":"Transition events","slug":"transition-events","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { fly } from 'svelte/transition';\n\n\tlet visible = true;\n\tlet status = 'waiting...';\n</script>\n\n<p>status: {status}</p>\n\n<label>\n\t<input type=\"checkbox\" bind:checked={visible} />\n\tvisible\n</label>\n\n{#if visible}\n\t<p\n\t\ttransition:fly={{ y: 200, duration: 2000 }}\n\t\ton:introstart={() => (status = 'intro started')}\n\t\ton:outrostart={() => (status = 'outro started')}\n\t\ton:introend={() => (status = 'intro ended')}\n\t\ton:outroend={() => (status = 'outro ended')}\n\t>\n\t\tFlies in and out\n\t</p>\n{/if}\n"}]},{"title":"Deferred transitions","slug":"deferred-transitions","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { crossfade, scale } from 'svelte/transition';\n\timport images from './images.js';\n\n\tconst [send, receive] = crossfade({\n\t\tduration: 200,\n\t\tfallback: scale\n\t});\n\n\tlet selected = null;\n\tlet loading = null;\n\n\tconst ASSETS = `https://sveltejs.github.io/assets/crossfade`;\n\n\tconst load = (image) => {\n\t\tconst timeout = setTimeout(() => (loading = image), 100);\n\n\t\tconst img = new Image();\n\n\t\timg.onload = () => {\n\t\t\tselected = image;\n\t\t\tclearTimeout(timeout);\n\t\t\tloading = null;\n\t\t};\n\n\t\timg.src = `${ASSETS}/${image.id}.jpg`;\n\t};\n</script>\n\n<div class=\"container\">\n\t<div class=\"phone\">\n\t\t<h1>Photo gallery</h1>\n\n\t\t<div class=\"grid\">\n\t\t\t{#each images as image}\n\t\t\t\t<div class=\"square\">\n\t\t\t\t\t{#if selected !== image}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tstyle=\"background-color: {image.color};\"\n\t\t\t\t\t\t\ton:click={() => load(image)}\n\t\t\t\t\t\t\tin:receive={{ key: image.id }}\n\t\t\t\t\t\t\tout:send={{ key: image.id }}>{loading === image ? '...' : image.id}</button\n\t\t\t\t\t\t>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\n\t\t{#if selected}\n\t\t\t{#await selected then d}\n\t\t\t\t<div class=\"photo\" in:receive|global={{ key: d.id }} out:send|global={{ key: d.id }}>\n\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events a11y-no-noninteractive-element-interactions -->\n\t\t\t\t\t<img alt={d.alt} src=\"{ASSETS}/{d.id}.jpg\" on:click={() => (selected = null)} />\n\n\t\t\t\t\t<p class=\"credit\">\n\t\t\t\t\t\t<a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.flickr.com/photos/{d.path}\"\n\t\t\t\t\t\t\t>via Flickr</a\n\t\t\t\t\t\t>\n\t\t\t\t\t\t&ndash;\n\t\t\t\t\t\t<a target=\"_blank\" rel=\"noreferrer\" href={d.license.url}>{d.license.name}</a>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t{/await}\n\t\t{/if}\n\t</div>\n</div>\n\n<style>\n\t.container {\n\t\tposition: absolute;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\n\t.phone {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 52vmin;\n\t\theight: 76vmin;\n\t\tborder: 2vmin solid #ccc;\n\t\tborder-bottom-width: 10vmin;\n\t\tpadding: 3vmin;\n\t\tborder-radius: 2vmin;\n\t}\n\n\th1 {\n\t\tfont-weight: 300;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 5vmin;\n\t\tmargin: 0.2em 0 0.5em 0;\n\t}\n\n\t.grid {\n\t\tdisplay: grid;\n\t\tflex: 1;\n\t\tgrid-template-columns: repeat(3, 1fr);\n\t\tgrid-template-rows: repeat(4, 1fr);\n\t\tgrid-gap: 2vmin;\n\t}\n\n\tbutton {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tcolor: white;\n\t\tfont-size: 5vmin;\n\t\tborder: none;\n\t\tmargin: 0;\n\t\twill-change: transform;\n\t}\n\n\t.photo,\n\timg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: hidden;\n\t}\n\n\t.photo {\n\t\tdisplay: flex;\n\t\talign-items: stretch;\n\t\tjustify-content: flex-end;\n\t\tflex-direction: column;\n\t\twill-change: transform;\n\t}\n\n\timg {\n\t\tobject-fit: cover;\n\t\tcursor: pointer;\n\t}\n\n\t.credit {\n\t\ttext-align: right;\n\t\tfont-size: 2.5vmin;\n\t\tpadding: 1em;\n\t\tmargin: 0;\n\t\tcolor: white;\n\t\tfont-weight: bold;\n\t\topacity: 0.6;\n\t\tbackground: rgba(0, 0, 0, 0.4);\n\t}\n\n\t.credit a,\n\t.credit a:visited {\n\t\tcolor: white;\n\t}\n</style>\n"},{"name":"images.js","type":"js","content":"const BY = {\n\tname: 'CC BY 2.0',\n\turl: 'https://creativecommons.org/licenses/by/2.0/'\n};\n\nconst BY_SA = {\n\tname: 'CC BY-SA 2.0',\n\turl: 'https://creativecommons.org/licenses/by-sa/2.0/'\n};\n\nconst BY_ND = {\n\tname: 'CC BY-ND 2.0',\n\turl: 'https://creativecommons.org/licenses/by-nd/2.0/'\n};\n\n// via http://labs.tineye.com/multicolr\nexport default [\n\t{\n\t\tcolor: '#001f3f',\n\t\tid: '1',\n\t\talt: 'Crepuscular rays',\n\t\tpath: '43428526@N03/7863279376',\n\t\tlicense: BY\n\t},\n\t{\n\t\tcolor: '#0074D9',\n\t\tid: '2',\n\t\talt: 'Lapland winter scene',\n\t\tpath: '25507134@N00/6527537485',\n\t\tlicense: BY\n\t},\n\t{\n\t\tcolor: '#7FDBFF',\n\t\tid: '3',\n\t\talt: 'Jellyfish',\n\t\tpath: '37707866@N00/3354331318',\n\t\tlicense: BY\n\t},\n\t{\n\t\tcolor: '#39CCCC',\n\t\tid: '4',\n\t\talt: 'A man scuba diving',\n\t\tpath: '32751486@N00/4608886209',\n\t\tlicense: BY_SA\n\t},\n\t{\n\t\tcolor: '#3D9970',\n\t\tid: '5',\n\t\talt: 'Underwater scene',\n\t\tpath: '25483059@N08/5548569010',\n\t\tlicense: BY\n\t},\n\t{\n\t\tcolor: '#2ECC40',\n\t\tid: '6',\n\t\talt: 'Ferns',\n\t\tpath: '8404611@N06/2447470760',\n\t\tlicense: BY\n\t},\n\t{\n\t\tcolor: '#01FF70',\n\t\tid: '7',\n\t\talt: 'Posters in a bar',\n\t\tpath: '33917831@N00/114428206',\n\t\tlicense: BY_SA\n\t},\n\t{\n\t\tcolor: '#FFDC00',\n\t\tid: '8',\n\t\talt: 'Daffodil',\n\t\tpath: '46417125@N04/4818617089',\n\t\tlicense: BY_ND\n\t},\n\t{\n\t\tcolor: '#FF851B',\n\t\tid: '9',\n\t\talt: 'Dust storm in Sydney',\n\t\tpath: '56068058@N00/3945496657',\n\t\tlicense: BY\n\t},\n\t{\n\t\tcolor: '#FF4136',\n\t\tid: '10',\n\t\talt: 'Postbox',\n\t\tpath: '31883499@N05/4216820032',\n\t\tlicense: BY\n\t},\n\t{\n\t\tcolor: '#85144b',\n\t\tid: '11',\n\t\talt: 'Fireworks',\n\t\tpath: '8484971@N07/2625506561',\n\t\tlicense: BY_ND\n\t},\n\t{\n\t\tcolor: '#B10DC9',\n\t\tid: '12',\n\t\talt: 'The Stereophonics',\n\t\tpath: '58028312@N00/5385464371',\n\t\tlicense: BY_ND\n\t}\n];\n"}]}]},{"title":"Animations","slug":"animations","examples":[{"title":"The animate directive","slug":"animate","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { quintOut } from 'svelte/easing';\n\timport { crossfade } from 'svelte/transition';\n\timport { flip } from 'svelte/animate';\n\n\tconst [send, receive] = crossfade({\n\t\tfallback(node, params) {\n\t\t\tconst style = getComputedStyle(node);\n\t\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\t\t\treturn {\n\t\t\t\tduration: 600,\n\t\t\t\teasing: quintOut,\n\t\t\t\tcss: (t) => `\n\t\t\t\t\ttransform: ${transform} scale(${t});\n\t\t\t\t\topacity: ${t}\n\t\t\t\t`\n\t\t\t};\n\t\t}\n\t});\n\n\tlet todos = [\n\t\t{ id: 1, done: false, description: 'write some docs' },\n\t\t{ id: 2, done: false, description: 'start writing JSConf talk' },\n\t\t{ id: 3, done: true, description: 'buy some milk' },\n\t\t{ id: 4, done: false, description: 'mow the lawn' },\n\t\t{ id: 5, done: false, description: 'feed the turtle' },\n\t\t{ id: 6, done: false, description: 'fix some bugs' }\n\t];\n\n\tlet uid = todos.length + 1;\n\n\tfunction add(input) {\n\t\tconst todo = {\n\t\t\tid: uid++,\n\t\t\tdone: false,\n\t\t\tdescription: input.value\n\t\t};\n\n\t\ttodos = [todo, ...todos];\n\t\tinput.value = '';\n\t}\n\n\tfunction remove(todo) {\n\t\ttodos = todos.filter((t) => t !== todo);\n\t}\n</script>\n\n<div class=\"board\">\n\t<input\n\t\tclass=\"new-todo\"\n\t\tplaceholder=\"what needs to be done?\"\n\t\ton:keydown={(event) => event.key === 'Enter' && add(event.target)}\n\t/>\n\n\t<div class=\"left\">\n\t\t<h2>todo</h2>\n\t\t{#each todos.filter((t) => !t.done) as todo (todo.id)}\n\t\t\t<label in:receive={{ key: todo.id }} out:send={{ key: todo.id }} animate:flip>\n\t\t\t\t<input type=\"checkbox\" bind:checked={todo.done} />\n\t\t\t\t{todo.description}\n\t\t\t\t<button on:click={() => remove(todo)}>x</button>\n\t\t\t</label>\n\t\t{/each}\n\t</div>\n\n\t<div class=\"right\">\n\t\t<h2>done</h2>\n\t\t{#each todos.filter((t) => t.done) as todo (todo.id)}\n\t\t\t<label in:receive={{ key: todo.id }} out:send={{ key: todo.id }} animate:flip>\n\t\t\t\t<input type=\"checkbox\" bind:checked={todo.done} />\n\t\t\t\t{todo.description}\n\t\t\t\t<button on:click={() => remove(todo)}>x</button>\n\t\t\t</label>\n\t\t{/each}\n\t</div>\n</div>\n\n<style>\n\t.new-todo {\n\t\tfont-size: 1.4em;\n\t\twidth: 100%;\n\t\tmargin: 2em 0 1em 0;\n\t}\n\n\t.board {\n\t\tmax-width: 36em;\n\t\tmargin: 0 auto;\n\t}\n\n\t.left,\n\t.right {\n\t\tfloat: left;\n\t\twidth: 50%;\n\t\tpadding: 0 1em 0 0;\n\t\tbox-sizing: border-box;\n\t}\n\n\th2 {\n\t\tfont-size: 2em;\n\t\tfont-weight: 200;\n\t\tuser-select: none;\n\t}\n\n\tlabel {\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tdisplay: block;\n\t\tfont-size: 1em;\n\t\tline-height: 1;\n\t\tpadding: 0.5em;\n\t\tmargin: 0 auto 0.5em auto;\n\t\tborder-radius: 2px;\n\t\tbackground-color: #eee;\n\t\tuser-select: none;\n\t\tcolor: black;\n\t}\n\n\tinput {\n\t\tmargin: 0;\n\t}\n\n\t.right label {\n\t\tbackground-color: rgb(180, 240, 100);\n\t}\n\n\tbutton {\n\t\tfloat: right;\n\t\theight: 1em;\n\t\tbox-sizing: border-box;\n\t\tpadding: 0 0.5em;\n\t\tline-height: 1;\n\t\tbackground-color: transparent;\n\t\tborder: none;\n\t\tcolor: rgb(170, 30, 30);\n\t\topacity: 0;\n\t\ttransition: opacity 0.2s;\n\t}\n\n\tlabel:hover button {\n\t\topacity: 1;\n\t}\n</style>\n"}]}]},{"title":"Easing","slug":"easing","examples":[{"title":"Ease Visualiser","slug":"easing","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { interpolateString as interpolate } from 'd3-interpolate';\n\timport { tweened } from 'svelte/motion';\n\n\timport Grid from './Grid.svelte';\n\timport Controls from './Controls.svelte';\n\n\timport { eases, types } from './eases.js';\n\n\tlet current_type = 'In';\n\tlet current_ease = 'sine';\n\tlet duration = 2000;\n\tlet current = eases.get(current_ease)[current_type];\n\tlet playing = false;\n\tlet width;\n\n\tconst ease_path = tweened(current.shape, { interpolate });\n\tconst time = tweened(0);\n\tconst value = tweened(1000);\n\n\tasync function runAnimations() {\n\t\tplaying = true;\n\n\t\tvalue.set(1000, { duration: 0 });\n\t\ttime.set(0, { duration: 0 });\n\n\t\tawait ease_path.set(current.shape);\n\t\tawait Promise.all([\n\t\t\ttime.set(1000, { duration, easing: (x) => x }),\n\t\t\tvalue.set(0, { duration, easing: current.fn })\n\t\t]);\n\n\t\tplaying = false;\n\t}\n\n\t$: current = eases.get(current_ease)[current_type];\n\t$: current && runAnimations();\n</script>\n\n<div bind:offsetWidth={width} class=\"easing-vis\">\n\t<svg viewBox=\"0 0 1400 1802\">\n\t\t<g class=\"canvas\">\n\t\t\t<Grid x={$time} y={$value} />\n\t\t\t<g class=\"graph\">\n\t\t\t\t<path d={$ease_path} stroke=\"#ff3e00\" stroke-width=\"2\" fill=\"none\" />\n\n\t\t\t\t<path\n\t\t\t\t\td=\"M0,23.647C0,22.41 27.014,0.407 28.496,0.025C29.978,-0.357 69.188,3.744 70.104,4.744C71.02,5.745 71.02,41.499 70.104,42.5C69.188,43.501 29.978,47.601 28.496,47.219C27.014,46.837 0,24.884 0,23.647Z\"\n\t\t\t\t\tfill=\"#ff3e00\"\n\t\t\t\t\tstyle=\"transform: translate(1060px, {$value - 24}px)\"\n\t\t\t\t/>\n\n\t\t\t\t<circle cx={$time} cy={$value} r=\"15\" fill=\"#ff3e00\" />\n\t\t\t</g>\n\t\t</g>\n\t</svg>\n\n\t<Controls\n\t\t{eases}\n\t\t{types}\n\t\t{playing}\n\t\t{width}\n\t\tbind:duration\n\t\tbind:current_ease\n\t\tbind:current_type\n\t\ton:play={runAnimations}\n\t/>\n</div>\n\n<style>\n\t:root {\n\t\tscrollbar-gutter: stable;\n\t}\n\n\t.easing-vis {\n\t\tdisplay: flex;\n\t\tmax-height: 95%;\n\t\tmax-width: 800px;\n\t\tmargin: auto;\n\t\tborder: 1px solid #333;\n\t\tborder-radius: 2px;\n\t\tpadding: 20px;\n\t}\n\n\tsvg {\n\t\twidth: 100%;\n\t\tmargin: 0 20px 0 0;\n\t}\n\n\t.graph {\n\t\ttransform: translate(200px, 400px);\n\t}\n\n\t@media (max-width: 600px) {\n\t\t.easing-vis {\n\t\t\tflex-direction: column;\n\t\t\tmax-height: calc(100% - 3rem);\n\t\t}\n\t}\n</style>\n"},{"name":"Controls.svelte","type":"svelte","content":"<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\texport let current_ease;\n\texport let current_type;\n\texport let eases;\n\texport let types;\n\texport let duration;\n\texport let playing;\n\texport let width;\n\n\tconst dispatch = createEventDispatcher();\n\n\t$: mobile = width && width < 600;\n</script>\n\n<div class=\"easing-sidebar\">\n\t<div class=\"easing-types\">\n\t\t<h3>Ease</h3>\n\t\t{#if mobile}\n\t\t\t<select bind:value={current_ease}>\n\t\t\t\t{#each [...eases] as [name]}\n\t\t\t\t\t<option value={name} class:selected={name === current_ease}>\n\t\t\t\t\t\t{name}\n\t\t\t\t\t</option>\n\t\t\t\t{/each}\n\t\t\t</select>\n\t\t{:else}\n\t\t\t<ul>\n\t\t\t\t{#each [...eases] as [name]}\n\t\t\t\t\t<li class:selected={name === current_ease}>\n\t\t\t\t\t\t<button on:click={() => (current_ease = name)}> {name}</button>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t{/if}\n\t\t<h3>Type</h3>\n\t\t{#if mobile}\n\t\t\t<select bind:value={current_type}>\n\t\t\t\t{#each types as [name, type]}\n\t\t\t\t\t<option value={type}>\n\t\t\t\t\t\t{name}\n\t\t\t\t\t</option>\n\t\t\t\t{/each}\n\t\t\t</select>\n\t\t{:else}\n\t\t\t<ul>\n\t\t\t\t{#each types as [name, type]}\n\t\t\t\t\t<li class:selected={type === current_type}>\n\t\t\t\t\t\t<button on:click={() => (current_type = type)}> {name}</button>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t{/if}\n\t</div>\n\t<h4>Duration</h4>\n\t<div class=\"duration\">\n\t\t<span>\n\t\t\t<input type=\"number\" bind:value={duration} min=\"0\" step=\"100\" />\n\t\t\t<button class=\"number\" on:click={() => (duration -= 100)}>-</button>\n\t\t\t<button class=\"number\" on:click={() => (duration += 100)}>+</button>\n\t\t</span>\n\t\t<button class=\"play\" on:click={() => dispatch('play')}>\n\t\t\t{playing ? 'Restart' : 'Play'}\n\t\t</button>\n\t</div>\n</div>\n\n<style>\n\t.easing-sidebar {\n\t\twidth: 11em;\n\t}\n\n\tul {\n\t\tlist-style: none;\n\t\tpadding: 0;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr;\n\t\tgap: 3px;\n\t\tfont-size: 18px;\n\t}\n\n\tli {\n\t\tdisplay: grid;\n\t}\n\n\tli:hover {\n\t\tbackground: #676778;\n\t\tcolor: white;\n\t}\n\n\tbutton {\n\t\tborder: none;\n\t\tborder-radius: 2px;\n\t\tpadding: 2px;\n\t}\n\n\t.selected > button {\n\t\tbackground: #ff3e00;\n\t\tcolor: white;\n\t\tfont-weight: bold;\n\t}\n\n\th3 {\n\t\tmargin: 0 10px 0 0;\n\t}\n\n\th4 {\n\t\tmargin-bottom: 0;\n\t}\n\n\tselect {\n\t\tdisplay: inline;\n\t\tpadding: 0.2em;\n\t\tmargin: 0;\n\t}\n\n\t.duration {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex-wrap: wrap;\n\t}\n\n\t.duration span {\n\t\tdisplay: flex;\n\t}\n\n\t.duration input {\n\t\twidth: 80px;\n\t\tmargin: 10px 10px 10px 0;\n\t}\n\n\t.duration button {\n\t\tmargin: 10px 5px;\n\t}\n\n\t.duration .number {\n\t\twidth: 30px;\n\t}\n\n\t.duration .play {\n\t\tmargin: 0 5px 0 auto;\n\t\twidth: 100%;\n\t}\n\n\t@media (max-width: 600px) {\n\t\t.easing-types {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tmargin-top: 10px;\n\t\t}\n\n\t\t.easing-sidebar {\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t.duration .play {\n\t\t\tmargin-left: auto;\n\t\t\twidth: unset;\n\t\t}\n\n\t\th3 {\n\t\t\tfont-size: 0.9em;\n\t\t\tdisplay: inline;\n\t\t}\n\n\t\th3:nth-of-type(2) {\n\t\t\tmargin-left: auto;\n\t\t}\n\n\t\tul li {\n\t\t\tmargin-right: 10px;\n\t\t}\n\t}\n</style>\n"},{"name":"Grid.svelte","type":"svelte","content":"<svelte:options namespace=\"svg\" />\n\n<script>\n\texport let x, y;\n</script>\n\n<rect\n\tx=\"0\"\n\ty=\"0\"\n\twidth=\"1400\"\n\theight=\"1800\"\n\tstroke=\"#ccc\"\n\tstyle=\"opacity: 0.5\"\n\tfill=\"none\"\n\tstroke-width=\"2\"\n/>\n\n{#each { length: 8 } as _, i}\n\t{#if i < 6}\n\t\t<path d=\"M{(i + 1) * 200} 0 L{(i + 1) * 200} 1802\" class=\"grid-line\" />\n\t{/if}\n\t<path d=\"M0 {(i + 1) * 200} L1400 {(i + 1) * 200} \" class=\"grid-line\" />\n{/each}\n\n<path style=\"transform: translateX({x + 200}px)\" d=\"M0 0 L0 1800\" class=\"grid-line-xy\" />\n<path style=\"transform: translateY({y}px)\" d=\"M0 400 L1400 400\" class=\"grid-line-xy\" />\n<rect x=\"200\" y=\"400\" width=\"1000\" height=\"1000\" stroke=\"#999\" fill=\"none\" stroke-width=\"2\" />\n\n<style>\n\t.grid-line {\n\t\tstroke: #ccc;\n\t\topacity: 0.5;\n\t\tstroke-width: 2;\n\t}\n\n\t.grid-line-xy {\n\t\tstroke: tomato;\n\t\tstroke-width: 2;\n\t}\n</style>\n"},{"name":"eases.js","type":"js","content":"import * as eases from 'svelte/easing';\n\nconst processed_eases = {};\n\nfor (const ease in eases) {\n\tif (ease === 'linear') {\n\t\tprocessed_eases.linear = eases.linear;\n\t} else {\n\t\tconst name = ease.replace(/In$|InOut$|Out$/, '');\n\t\tconst type = ease.match(/In$|InOut$|Out$/)[0];\n\n\t\tif (!(name in processed_eases)) processed_eases[name] = {};\n\t\tprocessed_eases[name][type] = {};\n\t\tprocessed_eases[name][type].fn = eases[ease];\n\n\t\tlet shape = 'M0 1000';\n\t\tfor (let i = 1; i <= 1000; i++) {\n\t\t\tshape = `${shape} L${(i / 1000) * 1000} ${1000 - eases[ease](i / 1000) * 1000} `;\n\t\t\tprocessed_eases[name][type].shape = shape;\n\t\t}\n\t}\n}\n\nconst sorted_eases = new Map([\n\t['sine', processed_eases.sine],\n\t['quad', processed_eases.quad],\n\t['cubic', processed_eases.cubic],\n\t['quart', processed_eases.quart],\n\t['quint', processed_eases.quint],\n\t['expo', processed_eases.expo],\n\t['circ', processed_eases.circ],\n\t['back', processed_eases.back],\n\t['elastic', processed_eases.elastic],\n\t['bounce', processed_eases.bounce]\n]);\n\nexport const types = [\n\t['Ease In', 'In'],\n\t['Ease Out', 'Out'],\n\t['Ease In Out', 'InOut']\n];\n\nexport { sorted_eases as eases };\n"}]}]},{"title":"SVG","slug":"svg","examples":[{"title":"Clock","slug":"clock","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { onMount } from 'svelte';\n\n\tlet time = new Date();\n\n\t// these automatically update when `time`\n\t// changes, because of the `$:` prefix\n\t$: hours = time.getHours();\n\t$: minutes = time.getMinutes();\n\t$: seconds = time.getSeconds();\n\n\tonMount(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\ttime = new Date();\n\t\t}, 1000);\n\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t});\n</script>\n\n<svg viewBox=\"-50 -50 100 100\">\n\t<circle class=\"clock-face\" r=\"48\" />\n\n\t<!-- markers -->\n\t{#each [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55] as minute}\n\t\t<line class=\"major\" y1=\"35\" y2=\"45\" transform=\"rotate({30 * minute})\" />\n\n\t\t{#each [1, 2, 3, 4] as offset}\n\t\t\t<line class=\"minor\" y1=\"42\" y2=\"45\" transform=\"rotate({6 * (minute + offset)})\" />\n\t\t{/each}\n\t{/each}\n\n\t<!-- hour hand -->\n\t<line class=\"hour\" y1=\"2\" y2=\"-20\" transform=\"rotate({30 * hours + minutes / 2})\" />\n\n\t<!-- minute hand -->\n\t<line class=\"minute\" y1=\"4\" y2=\"-30\" transform=\"rotate({6 * minutes + seconds / 10})\" />\n\n\t<!-- second hand -->\n\t<g transform=\"rotate({6 * seconds})\">\n\t\t<line class=\"second\" y1=\"10\" y2=\"-38\" />\n\t\t<line class=\"second-counterweight\" y1=\"10\" y2=\"2\" />\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t.clock-face {\n\t\tstroke: #333;\n\t\tfill: white;\n\t}\n\n\t.minor {\n\t\tstroke: #999;\n\t\tstroke-width: 0.5;\n\t}\n\n\t.major {\n\t\tstroke: #333;\n\t\tstroke-width: 1;\n\t}\n\n\t.hour {\n\t\tstroke: #333;\n\t}\n\n\t.minute {\n\t\tstroke: #666;\n\t}\n\n\t.second,\n\t.second-counterweight {\n\t\tstroke: rgb(180, 0, 0);\n\t}\n\n\t.second-counterweight {\n\t\tstroke-width: 3;\n\t}\n</style>\n"}]},{"title":"Bar chart","slug":"bar-chart","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { scaleLinear } from 'd3-scale';\n\n\tconst points = [\n\t\t{ year: 1990, birthrate: 16.7 },\n\t\t{ year: 1995, birthrate: 14.6 },\n\t\t{ year: 2000, birthrate: 14.4 },\n\t\t{ year: 2005, birthrate: 14 },\n\t\t{ year: 2010, birthrate: 13 },\n\t\t{ year: 2015, birthrate: 12.4 }\n\t];\n\n\tconst xTicks = [1990, 1995, 2000, 2005, 2010, 2015];\n\tconst yTicks = [0, 5, 10, 15, 20];\n\tconst padding = { top: 20, right: 15, bottom: 20, left: 25 };\n\n\tlet width = 500;\n\tlet height = 200;\n\n\tfunction formatMobile(tick) {\n\t\treturn \"'\" + tick.toString().slice(-2);\n\t}\n\n\t$: xScale = scaleLinear()\n\t\t.domain([0, xTicks.length])\n\t\t.range([padding.left, width - padding.right]);\n\n\t$: yScale = scaleLinear()\n\t\t.domain([0, Math.max.apply(null, yTicks)])\n\t\t.range([height - padding.bottom, padding.top]);\n\n\t$: innerWidth = width - (padding.left + padding.right);\n\t$: barWidth = innerWidth / xTicks.length;\n</script>\n\n<h2>US birthrate by year</h2>\n\n<div class=\"chart\" bind:clientWidth={width} bind:clientHeight={height}>\n\t<svg>\n\t\t<!-- y axis -->\n\t\t<g class=\"axis y-axis\">\n\t\t\t{#each yTicks as tick}\n\t\t\t\t<g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick)})\">\n\t\t\t\t\t<line x2=\"100%\" />\n\t\t\t\t\t<text y=\"-4\">{tick} {tick === 20 ? ' per 1,000 population' : ''}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<!-- x axis -->\n\t\t<g class=\"axis x-axis\">\n\t\t\t{#each points as point, i}\n\t\t\t\t<g class=\"tick\" transform=\"translate({xScale(i)},{height})\">\n\t\t\t\t\t<text x={barWidth / 2} y=\"-4\">{width > 380 ? point.year : formatMobile(point.year)}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<g class=\"bars\">\n\t\t\t{#each points as point, i}\n\t\t\t\t<rect\n\t\t\t\t\tx={xScale(i) + 2}\n\t\t\t\t\ty={yScale(point.birthrate)}\n\t\t\t\t\twidth={barWidth - 4}\n\t\t\t\t\theight={yScale(0) - yScale(point.birthrate)}\n\t\t\t\t/>\n\t\t\t{/each}\n\t\t</g>\n\t</svg>\n</div>\n\n<style>\n\th2 {\n\t\ttext-align: center;\n\t}\n\n\t.chart {\n\t\twidth: 100%;\n\t\tmax-width: 500px;\n\t\tmargin: 0 auto;\n\t}\n\n\tsvg {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 200px;\n\t}\n\n\t.tick {\n\t\tfont-family: Helvetica, Arial;\n\t\tfont-size: 0.725em;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke: #e2e2e2;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #ccc;\n\t\ttext-anchor: start;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n\n\t.x-axis .tick text {\n\t\ttext-anchor: middle;\n\t}\n\n\t.bars rect {\n\t\tfill: #a11;\n\t\tstroke: none;\n\t\topacity: 0.65;\n\t}\n</style>\n"}]},{"title":"Area chart","slug":"area-chart","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { scaleLinear } from 'd3-scale';\n\timport points from './data.js';\n\n\tconst yTicks = [0, 2, 4, 6, 8];\n\tconst xTicks = [1980, 1990, 2000, 2010];\n\tconst padding = { top: 20, right: 15, bottom: 20, left: 25 };\n\n\tlet width = 500;\n\tlet height = 200;\n\n\t$: xScale = scaleLinear()\n\t\t.domain([minX, maxX])\n\t\t.range([padding.left, width - padding.right]);\n\n\t$: yScale = scaleLinear()\n\t\t.domain([Math.min.apply(null, yTicks), Math.max.apply(null, yTicks)])\n\t\t.range([height - padding.bottom, padding.top]);\n\n\t$: minX = points[0].x;\n\t$: maxX = points[points.length - 1].x;\n\t$: path = `M${points.map((p) => `${xScale(p.x)},${yScale(p.y)}`).join('L')}`;\n\t$: area = `${path}L${xScale(maxX)},${yScale(0)}L${xScale(minX)},${yScale(0)}Z`;\n\n\tfunction formatMobile(tick) {\n\t\treturn \"'\" + tick.toString().slice(-2);\n\t}\n</script>\n\n<h2>Arctic sea ice minimum</h2>\n\n<div class=\"chart\" bind:clientWidth={width} bind:clientHeight={height}>\n\t<svg>\n\t\t<!-- y axis -->\n\t\t<g class=\"axis y-axis\" transform=\"translate(0, {padding.top})\">\n\t\t\t{#each yTicks as tick}\n\t\t\t\t<g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick) - padding.bottom})\">\n\t\t\t\t\t<line x2=\"100%\" />\n\t\t\t\t\t<text y=\"-4\">{tick} {tick === 8 ? ' million sq km' : ''}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<!-- x axis -->\n\t\t<g class=\"axis x-axis\">\n\t\t\t{#each xTicks as tick}\n\t\t\t\t<g class=\"tick tick-{tick}\" transform=\"translate({xScale(tick)},{height})\">\n\t\t\t\t\t<line y1=\"-{height}\" y2=\"-{padding.bottom}\" x1=\"0\" x2=\"0\" />\n\t\t\t\t\t<text y=\"-2\">{width > 380 ? tick : formatMobile(tick)}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<!-- data -->\n\t\t<path class=\"path-area\" d={area} />\n\t\t<path class=\"path-line\" d={path} />\n\t</svg>\n</div>\n\n<p>\n\tAverage September extent. Source: <a href=\"https://climate.nasa.gov/vital-signs/arctic-sea-ice/\"\n\t\t>NSIDC/NASA</a\n\t>\n</p>\n\n<style>\n\t.chart,\n\th2,\n\tp {\n\t\twidth: 100%;\n\t\tmax-width: 500px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n\n\tsvg {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 200px;\n\t\toverflow: visible;\n\t}\n\n\t.tick {\n\t\tfont-size: 0.725em;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke: #888;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #888;\n\t\ttext-anchor: start;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n\n\t.x-axis .tick text {\n\t\ttext-anchor: middle;\n\t}\n\n\t.path-line {\n\t\tfill: none;\n\t\tstroke: rgb(0, 100, 100);\n\t\tstroke-linejoin: round;\n\t\tstroke-linecap: round;\n\t\tstroke-width: 2;\n\t}\n\n\t.path-area {\n\t\tfill: rgba(0, 100, 100, 0.2);\n\t}\n</style>\n"},{"name":"data.js","type":"js","content":"export default [\n\t{ x: 1979, y: 7.19 },\n\t{ x: 1980, y: 7.83 },\n\t{ x: 1981, y: 7.24 },\n\t{ x: 1982, y: 7.44 },\n\t{ x: 1983, y: 7.51 },\n\t{ x: 1984, y: 7.1 },\n\t{ x: 1985, y: 6.91 },\n\t{ x: 1986, y: 7.53 },\n\t{ x: 1987, y: 7.47 },\n\t{ x: 1988, y: 7.48 },\n\t{ x: 1989, y: 7.03 },\n\t{ x: 1990, y: 6.23 },\n\t{ x: 1991, y: 6.54 },\n\t{ x: 1992, y: 7.54 },\n\t{ x: 1993, y: 6.5 },\n\t{ x: 1994, y: 7.18 },\n\t{ x: 1995, y: 6.12 },\n\t{ x: 1996, y: 7.87 },\n\t{ x: 1997, y: 6.73 },\n\t{ x: 1998, y: 6.55 },\n\t{ x: 1999, y: 6.23 },\n\t{ x: 2000, y: 6.31 },\n\t{ x: 2001, y: 6.74 },\n\t{ x: 2002, y: 5.95 },\n\t{ x: 2003, y: 6.13 },\n\t{ x: 2004, y: 6.04 },\n\t{ x: 2005, y: 5.56 },\n\t{ x: 2006, y: 5.91 },\n\t{ x: 2007, y: 4.29 },\n\t{ x: 2008, y: 4.72 },\n\t{ x: 2009, y: 5.38 },\n\t{ x: 2010, y: 4.92 },\n\t{ x: 2011, y: 4.61 },\n\t{ x: 2012, y: 3.62 },\n\t{ x: 2013, y: 5.35 },\n\t{ x: 2014, y: 5.28 },\n\t{ x: 2015, y: 4.63 },\n\t{ x: 2016, y: 4.72 },\n\t{ x: 2017, y: 4.82 },\n\t{ x: 2018, y: 4.79 },\n\t{ x: 2019, y: 4.36 },\n\t{ x: 2020, y: 4 },\n\t{ x: 2021, y: 4.92 }\n];\n"}]},{"title":"Scatterplot","slug":"scatterplot","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Scatterplot from './Scatterplot.svelte';\n\timport data from './data.js';\n</script>\n\n<div class=\"chart\">\n\t<h2>Anscombe's quartet</h2>\n\n\t<Scatterplot points={data.a} />\n\t<Scatterplot points={data.b} />\n\t<Scatterplot points={data.c} />\n\t<Scatterplot points={data.d} />\n</div>\n\n<style>\n\t.chart {\n\t\twidth: 100%;\n\t\tmax-width: 640px;\n\t\theight: calc(100% - 4em);\n\t\tmin-height: 280px;\n\t\tmax-height: 480px;\n\t\tmargin: 0 auto;\n\t}\n</style>\n"},{"name":"Scatterplot.svelte","type":"svelte","content":"<script>\n\timport { onMount } from 'svelte';\n\timport { scaleLinear } from 'd3-scale';\n\n\texport let points;\n\n\tlet svg;\n\tlet width = 500;\n\tlet height = 200;\n\n\tconst padding = { top: 20, right: 40, bottom: 40, left: 25 };\n\n\t$: xScale = scaleLinear()\n\t\t.domain([0, 20])\n\t\t.range([padding.left, width - padding.right]);\n\n\t$: yScale = scaleLinear()\n\t\t.domain([0, 12])\n\t\t.range([height - padding.bottom, padding.top]);\n\n\t$: xTicks = width > 180 ? [0, 4, 8, 12, 16, 20] : [0, 10, 20];\n\n\t$: yTicks = height > 180 ? [0, 2, 4, 6, 8, 10, 12] : [0, 4, 8, 12];\n\n\tonMount(resize);\n\n\tfunction resize() {\n\t\t({ width, height } = svg.getBoundingClientRect());\n\t}\n</script>\n\n<svelte:window on:resize={resize} />\n\n<svg bind:this={svg}>\n\t<!-- y axis -->\n\t<g class=\"axis y-axis\">\n\t\t{#each yTicks as tick}\n\t\t\t<g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick)})\">\n\t\t\t\t<line x1={padding.left} x2={xScale(22)} />\n\t\t\t\t<text x={padding.left - 8} y=\"+4\">{tick}</text>\n\t\t\t</g>\n\t\t{/each}\n\t</g>\n\n\t<!-- x axis -->\n\t<g class=\"axis x-axis\">\n\t\t{#each xTicks as tick}\n\t\t\t<g class=\"tick\" transform=\"translate({xScale(tick)},0)\">\n\t\t\t\t<line y1={yScale(0)} y2={yScale(13)} />\n\t\t\t\t<text y={height - padding.bottom + 16}>{tick}</text>\n\t\t\t</g>\n\t\t{/each}\n\t</g>\n\n\t<!-- data -->\n\t{#each points as point}\n\t\t<circle cx={xScale(point.x)} cy={yScale(point.y)} r=\"5\" />\n\t{/each}\n</svg>\n\n<style>\n\tsvg {\n\t\twidth: 50%;\n\t\theight: 50%;\n\t\tfloat: left;\n\t}\n\n\tcircle {\n\t\tfill: orange;\n\t\tfill-opacity: 0.6;\n\t\tstroke: rgba(0, 0, 0, 0.5);\n\t}\n\n\t.tick line {\n\t\tstroke: #ddd;\n\t\tstroke-dasharray: 2;\n\t}\n\n\ttext {\n\t\tfont-size: 12px;\n\t\tfill: #999;\n\t}\n\n\t.x-axis text {\n\t\ttext-anchor: middle;\n\t}\n\n\t.y-axis text {\n\t\ttext-anchor: end;\n\t}\n</style>\n"},{"name":"data.js","type":"js","content":"export default {\n\ta: [\n\t\t{ x: 10, y: 8.04 },\n\t\t{ x: 8, y: 6.95 },\n\t\t{ x: 13, y: 7.58 },\n\t\t{ x: 9, y: 8.81 },\n\t\t{ x: 11, y: 8.33 },\n\t\t{ x: 14, y: 9.96 },\n\t\t{ x: 6, y: 7.24 },\n\t\t{ x: 4, y: 4.26 },\n\t\t{ x: 12, y: 10.84 },\n\t\t{ x: 7, y: 4.82 },\n\t\t{ x: 5, y: 5.68 }\n\t],\n\tb: [\n\t\t{ x: 10, y: 9.14 },\n\t\t{ x: 8, y: 8.14 },\n\t\t{ x: 13, y: 8.74 },\n\t\t{ x: 9, y: 8.77 },\n\t\t{ x: 11, y: 9.26 },\n\t\t{ x: 14, y: 8.1 },\n\t\t{ x: 6, y: 6.13 },\n\t\t{ x: 4, y: 3.1 },\n\t\t{ x: 12, y: 9.13 },\n\t\t{ x: 7, y: 7.26 },\n\t\t{ x: 5, y: 4.74 }\n\t],\n\tc: [\n\t\t{ x: 10, y: 7.46 },\n\t\t{ x: 8, y: 6.77 },\n\t\t{ x: 13, y: 12.74 },\n\t\t{ x: 9, y: 7.11 },\n\t\t{ x: 11, y: 7.81 },\n\t\t{ x: 14, y: 8.84 },\n\t\t{ x: 6, y: 6.08 },\n\t\t{ x: 4, y: 5.39 },\n\t\t{ x: 12, y: 8.15 },\n\t\t{ x: 7, y: 6.42 },\n\t\t{ x: 5, y: 5.73 }\n\t],\n\td: [\n\t\t{ x: 8, y: 6.58 },\n\t\t{ x: 8, y: 5.76 },\n\t\t{ x: 8, y: 7.71 },\n\t\t{ x: 8, y: 8.84 },\n\t\t{ x: 8, y: 8.47 },\n\t\t{ x: 8, y: 7.04 },\n\t\t{ x: 8, y: 5.25 },\n\t\t{ x: 19, y: 12.5 },\n\t\t{ x: 8, y: 5.56 },\n\t\t{ x: 8, y: 7.91 },\n\t\t{ x: 8, y: 6.89 }\n\t]\n};\n"}]},{"title":"SVG transitions","slug":"svg-transitions","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { quintOut } from 'svelte/easing';\n\timport { fade, draw, fly } from 'svelte/transition';\n\timport { expand } from './custom-transitions.js';\n\timport { inner, outer } from './shape.js';\n\n\tlet visible = true;\n</script>\n\n{#if visible}\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 103 124\">\n\t\t<g out:fade={{ duration: 200 }} opacity=\"0.2\">\n\t\t\t<path\n\t\t\t\tin:expand={{ duration: 400, delay: 1000, easing: quintOut }}\n\t\t\t\tstyle=\"stroke: #ff3e00; fill: #ff3e00; stroke-width: 50;\"\n\t\t\t\td={outer}\n\t\t\t/>\n\t\t\t<path in:draw={{ duration: 1000 }} style=\"stroke:#ff3e00; stroke-width: 1.5\" d={inner} />\n\t\t</g>\n\t</svg>\n\n\t<div class=\"centered\" out:fly={{ y: -20, duration: 800 }}>\n\t\t{#each 'SVELTE' as char, i}\n\t\t\t<span in:fade|global={{ delay: 1000 + i * 150, duration: 800 }}>{char}</span>\n\t\t{/each}\n\t</div>\n{/if}\n\n<label>\n\t<input type=\"checkbox\" bind:checked={visible} />\n\ttoggle me\n</label>\n\n<link href=\"https://fonts.googleapis.com/css?family=Overpass:100,400\" rel=\"stylesheet\" />\n\n<style>\n\tsvg {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\tpath {\n\t\tfill: white;\n\t\topacity: 1;\n\t}\n\n\tlabel {\n\t\tposition: absolute;\n\t\ttop: 1em;\n\t\tleft: 1em;\n\t}\n\n\t.centered {\n\t\tfont-size: 20vw;\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tfont-family: 'Overpass';\n\t\tletter-spacing: 0.12em;\n\t\tcolor: #676778;\n\t\tfont-weight: 400;\n\t}\n\n\t.centered span {\n\t\twill-change: filter;\n\t}\n</style>\n"},{"name":"custom-transitions.js","type":"js","content":"import { cubicOut } from 'svelte/easing';\n\nexport function expand(node, params) {\n\tconst { delay = 0, duration = 400, easing = cubicOut } = params;\n\n\tconst w = parseFloat(getComputedStyle(node).strokeWidth);\n\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t}; stroke-width: ${t * w}`\n\t};\n}\n"},{"name":"shape.js","type":"js","content":"export const inner = `M45.41,108.86A21.81,21.81,0,0,1,22,100.18,20.2,20.2,0,0,1,18.53,84.9a19,19,0,0,1,.65-2.57l.52-1.58,1.41,1a35.32,35.32,0,0,0,10.75,5.37l1,.31-.1,1a6.2,6.2,0,0,0,1.11,4.08A6.57,6.57,0,0,0,41,95.19a6,6,0,0,0,1.68-.74L70.11,76.94a5.76,5.76,0,0,0,2.59-3.83,6.09,6.09,0,0,0-1-4.6,6.58,6.58,0,0,0-7.06-2.62,6.21,6.21,0,0,0-1.69.74L52.43,73.31a19.88,19.88,0,0,1-5.58,2.45,21.82,21.82,0,0,1-23.43-8.68A20.2,20.2,0,0,1,20,51.8a19,19,0,0,1,8.56-12.7L56,21.59a19.88,19.88,0,0,1,5.58-2.45A21.81,21.81,0,0,1,85,27.82,20.2,20.2,0,0,1,88.47,43.1a19,19,0,0,1-.65,2.57l-.52,1.58-1.41-1a35.32,35.32,0,0,0-10.75-5.37l-1-.31.1-1a6.2,6.2,0,0,0-1.11-4.08,6.57,6.57,0,0,0-7.06-2.62,6,6,0,0,0-1.68.74L36.89,51.06a5.71,5.71,0,0,0-2.58,3.83,6,6,0,0,0,1,4.6,6.58,6.58,0,0,0,7.06,2.62,6.21,6.21,0,0,0,1.69-.74l10.48-6.68a19.88,19.88,0,0,1,5.58-2.45,21.82,21.82,0,0,1,23.43,8.68A20.2,20.2,0,0,1,87,76.2a19,19,0,0,1-8.56,12.7L51,106.41a19.88,19.88,0,0,1-5.58,2.45`;\nexport const outer = `M65,34 L37,52 A1 1 0 0 0 44 60 L70.5,44.5 A1 1 0 0 0 65,34Z M64,67 L36,85 A1 1 0 0 0 42 94 L68,77.5 A1 1 0 0 0 64,67Z`;\n"}]}]},{"title":"Actions","slug":"actions","examples":[{"title":"The use directive","slug":"actions","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { clickOutside } from './click_outside.js';\n\n\tlet showModal = true;\n</script>\n\n<button on:click={() => (showModal = true)}>Show Modal</button>\n{#if showModal}\n\t<div class=\"box\" use:clickOutside on:outclick={() => (showModal = false)}>Click outside me!</div>\n{/if}\n\n<style>\n\t.box {\n\t\t--width: 100px;\n\t\t--height: 100px;\n\t\tposition: absolute;\n\t\twidth: var(--width);\n\t\theight: var(--height);\n\t\tleft: calc(50% - var(--width) / 2);\n\t\ttop: calc(50% - var(--height) / 2);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 8px;\n\t\tborder-radius: 4px;\n\t\tbackground-color: #ff3e00;\n\t\tcolor: #fff;\n\t\ttext-align: center;\n\t\tfont-weight: bold;\n\t}\n</style>\n"},{"name":"click_outside.js","type":"js","content":"export function clickOutside(node) {\n\tconst handleClick = (event) => {\n\t\tif (!node.contains(event.target)) {\n\t\t\tnode.dispatchEvent(new CustomEvent('outclick'));\n\t\t}\n\t};\n\n\tdocument.addEventListener('click', handleClick, true);\n\n\treturn {\n\t\tdestroy() {\n\t\t\tdocument.removeEventListener('click', handleClick, true);\n\t\t}\n\t};\n}\n"}]},{"title":"Adding parameters","slug":"adding-parameters-to-actions","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { longpress } from './longpress.js';\n\n\tlet pressed = false;\n\tlet duration = 2000;\n</script>\n\n<label>\n\t<input type=\"range\" bind:value={duration} max={2000} step={100} />\n\t{duration}ms\n</label>\n\n<button\n\tuse:longpress={duration}\n\ton:longpress={() => (pressed = true)}\n\ton:mouseenter={() => (pressed = false)}>press and hold</button\n>\n\n{#if pressed}\n\t<p>congratulations, you pressed and held for {duration}ms</p>\n{/if}\n"},{"name":"longpress.js","type":"js","content":"export function longpress(node, duration) {\n\tlet timer;\n\n\tconst handleMousedown = () => {\n\t\ttimer = setTimeout(() => {\n\t\t\tnode.dispatchEvent(new CustomEvent('longpress'));\n\t\t}, duration);\n\t};\n\n\tconst handleMouseup = () => {\n\t\tclearTimeout(timer);\n\t};\n\n\tnode.addEventListener('mousedown', handleMousedown);\n\tnode.addEventListener('mouseup', handleMouseup);\n\n\treturn {\n\t\tupdate(newDuration) {\n\t\t\tduration = newDuration;\n\t\t},\n\t\tdestroy() {\n\t\t\tnode.removeEventListener('mousedown', handleMousedown);\n\t\t\tnode.removeEventListener('mouseup', handleMouseup);\n\t\t}\n\t};\n}\n"}]},{"title":"A more complex action","slug":"actions-pannable","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { spring } from 'svelte/motion';\n\timport { pannable } from './pannable.js';\n\n\tconst coords = spring(\n\t\t{ x: 0, y: 0 },\n\t\t{\n\t\t\tstiffness: 0.2,\n\t\t\tdamping: 0.4\n\t\t}\n\t);\n\n\tfunction handlePanStart() {\n\t\tcoords.stiffness = coords.damping = 1;\n\t}\n\n\tfunction handlePanMove(event) {\n\t\tcoords.update(($coords) => ({\n\t\t\tx: $coords.x + event.detail.dx,\n\t\t\ty: $coords.y + event.detail.dy\n\t\t}));\n\t}\n\n\tfunction handlePanEnd(event) {\n\t\tcoords.stiffness = 0.2;\n\t\tcoords.damping = 0.4;\n\t\tcoords.set({ x: 0, y: 0 });\n\t}\n</script>\n\n<div\n\tclass=\"box\"\n\tuse:pannable\n\ton:panstart={handlePanStart}\n\ton:panmove={handlePanMove}\n\ton:panend={handlePanEnd}\n\tstyle=\"transform:\n\t\ttranslate({$coords.x}px,{$coords.y}px)\n\t\trotate({$coords.x * 0.2}deg)\"\n/>\n\n<style>\n\t.box {\n\t\t--width: 100px;\n\t\t--height: 100px;\n\t\tposition: absolute;\n\t\twidth: var(--width);\n\t\theight: var(--height);\n\t\tleft: calc(50% - var(--width) / 2);\n\t\ttop: calc(50% - var(--height) / 2);\n\t\tborder-radius: 4px;\n\t\tbackground-color: #ff3e00;\n\t\tcursor: move;\n\t}\n</style>\n"},{"name":"pannable.js","type":"js","content":"export function pannable(node) {\n\tlet x;\n\tlet y;\n\n\tfunction handleMousedown(event) {\n\t\tx = event.clientX;\n\t\ty = event.clientY;\n\n\t\tnode.dispatchEvent(\n\t\t\tnew CustomEvent('panstart', {\n\t\t\t\tdetail: { x, y }\n\t\t\t})\n\t\t);\n\n\t\twindow.addEventListener('mousemove', handleMousemove);\n\t\twindow.addEventListener('mouseup', handleMouseup);\n\t}\n\n\tfunction handleMousemove(event) {\n\t\tconst dx = event.clientX - x;\n\t\tconst dy = event.clientY - y;\n\t\tx = event.clientX;\n\t\ty = event.clientY;\n\n\t\tnode.dispatchEvent(\n\t\t\tnew CustomEvent('panmove', {\n\t\t\t\tdetail: { x, y, dx, dy }\n\t\t\t})\n\t\t);\n\t}\n\n\tfunction handleMouseup(event) {\n\t\tx = event.clientX;\n\t\ty = event.clientY;\n\n\t\tnode.dispatchEvent(\n\t\t\tnew CustomEvent('panend', {\n\t\t\t\tdetail: { x, y }\n\t\t\t})\n\t\t);\n\n\t\twindow.removeEventListener('mousemove', handleMousemove);\n\t\twindow.removeEventListener('mouseup', handleMouseup);\n\t}\n\n\tnode.addEventListener('mousedown', handleMousedown);\n\n\treturn {\n\t\tdestroy() {\n\t\t\tnode.removeEventListener('mousedown', handleMousedown);\n\t\t}\n\t};\n}\n"}]}]},{"title":"Classes","slug":"classes","examples":[{"title":"The class directive","slug":"classes","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet current = 'foo';\n</script>\n\n<button class:active={current === 'foo'} on:click={() => (current = 'foo')}>foo</button>\n\n<button class:active={current === 'bar'} on:click={() => (current = 'bar')}>bar</button>\n\n<button class:active={current === 'baz'} on:click={() => (current = 'baz')}>baz</button>\n\n<style>\n\tbutton {\n\t\tdisplay: block;\n\t}\n\n\t.active {\n\t\tbackground-color: #ff3e00;\n\t\tcolor: white;\n\t}\n</style>\n"}]},{"title":"Shorthand class directive","slug":"class-shorthand","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet big = false;\n</script>\n\n<label>\n\t<input type=\"checkbox\" bind:checked={big} />\n\tbig\n</label>\n\n<div class:big>\n\tsome {big ? 'big' : 'small'} text\n</div>\n\n<style>\n\t.big {\n\t\tfont-size: 4em;\n\t}\n</style>\n"}]}]},{"title":"Component composition","slug":"composition","examples":[{"title":"Slots","slug":"slots","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Box from './Box.svelte';\n</script>\n\n<Box>\n\t<h2>Hello!</h2>\n\t<p>This is a box. It can contain anything.</p>\n</Box>\n"},{"name":"Box.svelte","type":"svelte","content":"<div class=\"box\">\n\t<slot />\n</div>\n\n<style>\n\t.box {\n\t\twidth: 300px;\n\t\tborder: 1px solid #aaa;\n\t\tborder-radius: 2px;\n\t\tbox-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);\n\t\tpadding: 1em;\n\t\tmargin: 0 0 1em 0;\n\t}\n</style>\n"}]},{"title":"Slot fallbacks","slug":"slot-fallbacks","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Box from './Box.svelte';\n</script>\n\n<Box>\n\t<h2>Hello!</h2>\n\t<p>This is a box. It can contain anything.</p>\n</Box>\n\n<Box />\n"},{"name":"Box.svelte","type":"svelte","content":"<div class=\"box\">\n\t<slot>\n\t\t<em>no content was provided</em>\n\t</slot>\n</div>\n\n<style>\n\t.box {\n\t\twidth: 300px;\n\t\tborder: 1px solid #aaa;\n\t\tborder-radius: 2px;\n\t\tbox-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);\n\t\tpadding: 1em;\n\t\tmargin: 0 0 1em 0;\n\t}\n</style>\n"}]},{"title":"Named slots","slug":"named-slots","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport ContactCard from './ContactCard.svelte';\n</script>\n\n<ContactCard>\n\t<span slot=\"name\"> P. Sherman </span>\n\n\t<span slot=\"address\">\n\t\t42 Wallaby Way<br />\n\t\tSydney\n\t</span>\n</ContactCard>\n"},{"name":"ContactCard.svelte","type":"svelte","content":"<article class=\"contact-card\">\n\t<h2>\n\t\t<slot name=\"name\">\n\t\t\t<span class=\"missing\">Unknown name</span>\n\t\t</slot>\n\t</h2>\n\n\t<div class=\"address\">\n\t\t<slot name=\"address\">\n\t\t\t<span class=\"missing\">Unknown address</span>\n\t\t</slot>\n\t</div>\n\n\t<div class=\"email\">\n\t\t<slot name=\"email\">\n\t\t\t<span class=\"missing\">Unknown email</span>\n\t\t</slot>\n\t</div>\n</article>\n\n<style>\n\t.contact-card {\n\t\twidth: 300px;\n\t\tborder: 1px solid #aaa;\n\t\tborder-radius: 2px;\n\t\tbox-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);\n\t\tpadding: 1em;\n\t}\n\n\th2 {\n\t\tpadding: 0 0 0.2em 0;\n\t\tmargin: 0 0 1em 0;\n\t\tborder-bottom: 1px solid #ff3e00;\n\t}\n\n\t.address,\n\t.email {\n\t\tpadding: 0 0 0 1.5em;\n\t\tbackground: 0 0 no-repeat;\n\t\tbackground-size: 20px 20px;\n\t\tmargin: 0 0 0.5em 0;\n\t\tline-height: 1.2;\n\t}\n\n\t.address {\n\t\tbackground-image: url(/tutorial/icons/map-marker.svg);\n\t}\n\t.email {\n\t\tbackground-image: url(/tutorial/icons/email.svg);\n\t}\n\t.missing {\n\t\tcolor: #999;\n\t}\n</style>\n"}]},{"title":"Slot props","slug":"slot-props","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Hoverable from './Hoverable.svelte';\n</script>\n\n<Hoverable let:hovering={active}>\n\t<div class:active>\n\t\t{#if active}\n\t\t\t<p>I am being hovered upon.</p>\n\t\t{:else}\n\t\t\t<p>Hover over me!</p>\n\t\t{/if}\n\t</div>\n</Hoverable>\n\n<Hoverable let:hovering={active}>\n\t<div class:active>\n\t\t{#if active}\n\t\t\t<p>I am being hovered upon.</p>\n\t\t{:else}\n\t\t\t<p>Hover over me!</p>\n\t\t{/if}\n\t</div>\n</Hoverable>\n\n<Hoverable let:hovering={active}>\n\t<div class:active>\n\t\t{#if active}\n\t\t\t<p>I am being hovered upon.</p>\n\t\t{:else}\n\t\t\t<p>Hover over me!</p>\n\t\t{/if}\n\t</div>\n</Hoverable>\n\n<style>\n\tdiv {\n\t\tpadding: 1em;\n\t\tmargin: 0 0 1em 0;\n\t\tbackground-color: #eee;\n\t}\n\n\t.active {\n\t\tbackground-color: #ff3e00;\n\t\tcolor: white;\n\t}\n\n\tp {\n\t\tpointer-events: none;\n\t\tcolor: black;\n\t}\n</style>\n"},{"name":"Hoverable.svelte","type":"svelte","content":"<script>\n\tlet hovering;\n\n\tfunction enter() {\n\t\thovering = true;\n\t}\n\n\tfunction leave() {\n\t\thovering = false;\n\t}\n</script>\n\n<!-- svelte-ignore a11y-no-static-element-interactions -->\n<div on:mouseenter={enter} on:mouseleave={leave}>\n\t<slot {hovering} />\n</div>\n"}]},{"title":"Conditional Slots","slug":"conditional-slots","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Profile from './Profile.svelte';\n</script>\n\n<Profile>\n\t<span slot=\"name\">Bob</span>\n\t<span slot=\"email\">bob@email.com</span>\n</Profile>\n\n<Profile>\n\t<span slot=\"name\">Alice</span>\n\t<span slot=\"phone\">12345678</span>\n</Profile>\n"},{"name":"Profile.svelte","type":"svelte","content":"<section>\n\t<div>Name</div>\n\t<slot name=\"name\" />\n\t{#if $$slots.email}\n\t\t<div>Email</div>\n\t\t<slot name=\"email\" />\n\t{/if}\n\t{#if $$slots.phone}\n\t\t<div>Phone</div>\n\t\t<slot name=\"phone\" />\n\t{/if}\n</section>\n\n<style>\n\tsection {\n\t\twidth: 200px;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 1fr;\n\t\tpadding: 16px;\n\t\tbox-shadow: 2px 2px 4px #dedede;\n\t\tborder: 1px solid #888;\n\t\tmargin-bottom: 16px;\n\t}\n</style>\n"}]},{"title":"Modal","slug":"modal","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Modal from './Modal.svelte';\n\n\tlet showModal = false;\n</script>\n\n<button on:click={() => (showModal = true)}> show modal </button>\n\n<Modal bind:showModal>\n\t<h2 slot=\"header\">\n\t\tmodal\n\t\t<small><em>adjective</em> mod·al \\ˈmō-dəl\\</small>\n\t</h2>\n\n\t<ol class=\"definition-list\">\n\t\t<li>of or relating to modality in logic</li>\n\t\t<li>\n\t\t\tcontaining provisions as to the mode of procedure or the manner of taking effect —used of a\n\t\t\tcontract or legacy\n\t\t</li>\n\t\t<li>of or relating to a musical mode</li>\n\t\t<li>of or relating to structure as opposed to substance</li>\n\t\t<li>\n\t\t\tof, relating to, or constituting a grammatical form or category characteristically indicating\n\t\t\tpredication\n\t\t</li>\n\t\t<li>of or relating to a statistical mode</li>\n\t</ol>\n\n\t<a href=\"https://www.merriam-webster.com/dictionary/modal\">merriam-webster.com</a>\n</Modal>\n"},{"name":"Modal.svelte","type":"svelte","content":"<script>\n\texport let showModal; // boolean\n\n\tlet dialog; // HTMLDialogElement\n\n\t$: if (dialog && showModal) dialog.showModal();\n</script>\n\n<!-- svelte-ignore a11y-click-events-have-key-events a11y-no-noninteractive-element-interactions -->\n<dialog\n\tbind:this={dialog}\n\ton:close={() => (showModal = false)}\n\ton:click|self={() => dialog.close()}\n>\n\t<!-- svelte-ignore a11y-no-static-element-interactions -->\n\t<div on:click|stopPropagation>\n\t\t<slot name=\"header\" />\n\t\t<hr />\n\t\t<slot />\n\t\t<hr />\n\t\t<!-- svelte-ignore a11y-autofocus -->\n\t\t<button autofocus on:click={() => dialog.close()}>close modal</button>\n\t</div>\n</dialog>\n\n<style>\n\tdialog {\n\t\tmax-width: 32em;\n\t\tborder-radius: 0.2em;\n\t\tborder: none;\n\t\tpadding: 0;\n\t}\n\tdialog::backdrop {\n\t\tbackground: rgba(0, 0, 0, 0.3);\n\t}\n\tdialog > div {\n\t\tpadding: 1em;\n\t}\n\tdialog[open] {\n\t\tanimation: zoom 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\n\t}\n\t@keyframes zoom {\n\t\tfrom {\n\t\t\ttransform: scale(0.95);\n\t\t}\n\t\tto {\n\t\t\ttransform: scale(1);\n\t\t}\n\t}\n\tdialog[open]::backdrop {\n\t\tanimation: fade 0.2s ease-out;\n\t}\n\t@keyframes fade {\n\t\tfrom {\n\t\t\topacity: 0;\n\t\t}\n\t\tto {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\tbutton {\n\t\tdisplay: block;\n\t}\n</style>\n"}]}]},{"title":"Context API","slug":"context","examples":[{"title":"setContext and getContext","slug":"context-api","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Map from './Map.svelte';\n\timport MapMarker from './MapMarker.svelte';\n</script>\n\n<Map lat={35} lon={-84} zoom={3.5}>\n\t<MapMarker lat={37.8225} lon={-122.0024} label=\"Svelte Body Shaping\" />\n\t<MapMarker lat={33.8981} lon={-118.4169} label=\"Svelte Barbershop & Essentials\" />\n\t<MapMarker lat={29.723} lon={-95.4189} label=\"Svelte Waxing Studio\" />\n\t<MapMarker lat={28.3378} lon={-81.3966} label=\"Svelte 30 Nutritional Consultants\" />\n\t<MapMarker lat={40.6483} lon={-74.0237} label=\"Svelte Brands LLC\" />\n\t<MapMarker lat={40.6986} lon={-74.41} label=\"Svelte Medical Systems\" />\n</Map>\n"},{"name":"Map.svelte","type":"svelte","content":"<script>\n\timport { onDestroy, setContext } from 'svelte';\n\timport { mapbox, key } from './mapbox.js';\n\n\tsetContext(key, {\n\t\tgetMap: () => map\n\t});\n\n\texport let lat;\n\texport let lon;\n\texport let zoom;\n\n\tlet container;\n\tlet map;\n\n\tfunction load() {\n\t\tmap = new mapbox.Map({\n\t\t\tcontainer,\n\t\t\tstyle: 'mapbox://styles/mapbox/streets-v9',\n\t\t\tcenter: [lon, lat],\n\t\t\tzoom\n\t\t});\n\t}\n\n\tonDestroy(() => {\n\t\tif (map) map.remove();\n\t});\n</script>\n\n<svelte:head>\n\t<link rel=\"stylesheet\" href=\"https://unpkg.com/mapbox-gl/dist/mapbox-gl.css\" on:load={load} />\n</svelte:head>\n\n<div bind:this={container}>\n\t{#if map}\n\t\t<slot />\n\t{/if}\n</div>\n\n<style>\n\tdiv {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n"},{"name":"MapMarker.svelte","type":"svelte","content":"<script>\n\timport { getContext } from 'svelte';\n\timport { mapbox, key } from './mapbox.js';\n\n\tconst { getMap } = getContext(key);\n\tconst map = getMap();\n\n\texport let lat;\n\texport let lon;\n\texport let label;\n\n\tconst popup = new mapbox.Popup({ offset: 25 }).setText(label);\n\n\tconst marker = new mapbox.Marker().setLngLat([lon, lat]).setPopup(popup).addTo(map);\n</script>\n"},{"name":"mapbox.js","type":"js","content":"import mapbox from 'mapbox-gl';\n\n// https://docs.mapbox.com/help/glossary/access-token/\nmapbox.accessToken = MAPBOX_ACCESS_TOKEN;\n\nconst key = {};\n\nexport { mapbox, key };\n"}]}]},{"title":"Special elements","slug":"special-elements","examples":[{"title":"<svelte:self>","slug":"svelte-self","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport Folder from './Folder.svelte';\n\n\tlet root = [\n\t\t{\n\t\t\ttype: 'folder',\n\t\t\tname: 'Important work stuff',\n\t\t\tfiles: [{ type: 'file', name: 'quarterly-results.xlsx' }]\n\t\t},\n\t\t{\n\t\t\ttype: 'folder',\n\t\t\tname: 'Animal GIFs',\n\t\t\tfiles: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'folder',\n\t\t\t\t\tname: 'Dogs',\n\t\t\t\t\tfiles: [\n\t\t\t\t\t\t{ type: 'file', name: 'treadmill.gif' },\n\t\t\t\t\t\t{ type: 'file', name: 'rope-jumping.gif' }\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'folder',\n\t\t\t\t\tname: 'Goats',\n\t\t\t\t\tfiles: [\n\t\t\t\t\t\t{ type: 'file', name: 'parkour.gif' },\n\t\t\t\t\t\t{ type: 'file', name: 'rampage.gif' }\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ type: 'file', name: 'cat-roomba.gif' },\n\t\t\t\t{ type: 'file', name: 'duck-shuffle.gif' },\n\t\t\t\t{ type: 'file', name: 'monkey-on-a-pig.gif' }\n\t\t\t]\n\t\t},\n\t\t{ type: 'file', name: 'TODO.md' }\n\t];\n</script>\n\n<Folder name=\"Home\" files={root} expanded />\n"},{"name":"File.svelte","type":"svelte","content":"<script>\n\texport let name;\n\t$: type = name.slice(name.lastIndexOf('.') + 1);\n</script>\n\n<span style=\"background-image: url(/tutorial/icons/{type}.svg)\">{name}</span>\n\n<style>\n\tspan {\n\t\tpadding: 0 0 0 1.5em;\n\t\tbackground: 0 0.1em no-repeat;\n\t\tbackground-size: 1em 1em;\n\t}\n</style>\n"},{"name":"Folder.svelte","type":"svelte","content":"<script>\n\timport File from './File.svelte';\n\timport { slide } from 'svelte/transition';\n\n\texport let expanded = false;\n\texport let name;\n\texport let files;\n\n\tfunction toggle() {\n\t\texpanded = !expanded;\n\t}\n</script>\n\n<button class:expanded on:click={toggle}>{name}</button>\n\n{#if expanded}\n\t<ul transition:slide={{ duration: 300 }}>\n\t\t{#each files as file}\n\t\t\t<li>\n\t\t\t\t{#if file.type === 'folder'}\n\t\t\t\t\t<svelte:self {...file} />\n\t\t\t\t{:else}\n\t\t\t\t\t<File {...file} />\n\t\t\t\t{/if}\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n{/if}\n\n<style>\n\tbutton {\n\t\tpadding: 0 0 0 1.5em;\n\t\tbackground: url(/tutorial/icons/folder.svg) 0 0.1em no-repeat;\n\t\tbackground-size: 1em 1em;\n\t\tfont-weight: bold;\n\t\tcursor: pointer;\n\t\tborder: none;\n\t\tfont-size: 14px;\n\t}\n\n\t.expanded {\n\t\tbackground-image: url(/tutorial/icons/folder-open.svg);\n\t}\n\n\tul {\n\t\tpadding: 0.2em 0 0 0.5em;\n\t\tmargin: 0 0 0 0.5em;\n\t\tlist-style: none;\n\t\tborder-left: 1px solid #eee;\n\t}\n\n\tli {\n\t\tpadding: 0.2em 0;\n\t}\n</style>\n"}]},{"title":"<svelte:component>","slug":"svelte-component","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport RedThing from './RedThing.svelte';\n\timport GreenThing from './GreenThing.svelte';\n\timport BlueThing from './BlueThing.svelte';\n\n\tconst options = [\n\t\t{ color: 'red', component: RedThing },\n\t\t{ color: 'green', component: GreenThing },\n\t\t{ color: 'blue', component: BlueThing }\n\t];\n\n\tlet selected = options[0];\n</script>\n\n<select bind:value={selected}>\n\t{#each options as option}\n\t\t<option value={option}>{option.color}</option>\n\t{/each}\n</select>\n\n<svelte:component this={selected.component} />\n"},{"name":"BlueThing.svelte","type":"svelte","content":"<strong>Blue thing</strong>\n\n<style>\n\tstrong {\n\t\tcolor: blue;\n\t}\n</style>\n"},{"name":"GreenThing.svelte","type":"svelte","content":"<strong>Green thing</strong>\n\n<style>\n\tstrong {\n\t\tcolor: green;\n\t}\n</style>\n"},{"name":"RedThing.svelte","type":"svelte","content":"<strong>Red thing</strong>\n\n<style>\n\tstrong {\n\t\tcolor: red;\n\t}\n</style>\n"}]},{"title":"<svelte:element>","slug":"svelte-element","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tconst options = ['h1', 'h3', 'p'];\n\tlet selected = options[0];\n</script>\n\n<select bind:value={selected}>\n\t{#each options as option}\n\t\t<option value={option}>{option}</option>\n\t{/each}\n</select>\n\n<svelte:element this={selected}>I'm a {selected} tag</svelte:element>\n"}]},{"title":"<svelte:window>","slug":"svelte-window","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet key;\n\tlet keyCode;\n\n\tfunction handleKeydown(event) {\n\t\tkey = event.key;\n\t\tkeyCode = event.keyCode;\n\t}\n</script>\n\n<svelte:window on:keydown={handleKeydown} />\n\n<div style=\"text-align: center\">\n\t{#if key}\n\t\t<kbd>{key === ' ' ? 'Space' : key}</kbd>\n\t\t<p>{keyCode}</p>\n\t{:else}\n\t\t<p>Focus this window and press any key</p>\n\t{/if}\n</div>\n\n<style>\n\tdiv {\n\t\tdisplay: flex;\n\t\theight: 100%;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tflex-direction: column;\n\t}\n\n\tkbd {\n\t\tbackground-color: #eee;\n\t\tborder-radius: 4px;\n\t\tfont-size: 6em;\n\t\tpadding: 0.2em 0.5em;\n\t\tborder-top: 5px solid rgba(255, 255, 255, 0.5);\n\t\tborder-left: 5px solid rgba(255, 255, 255, 0.5);\n\t\tborder-right: 5px solid rgba(0, 0, 0, 0.2);\n\t\tborder-bottom: 5px solid rgba(0, 0, 0, 0.2);\n\t\tcolor: #555;\n\t}\n</style>\n"}]},{"title":"<svelte:window> bindings","slug":"svelte-window-bindings","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tconst layers = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\n\tlet y;\n</script>\n\n<svelte:window bind:scrollY={y} />\n\n<a class=\"parallax-container\" href=\"https://www.firewatchgame.com\">\n\t{#each layers as layer}\n\t\t<img\n\t\t\tstyle=\"transform: translate(0,{(-y * layer) / (layers.length - 1)}px)\"\n\t\t\tsrc=\"https://www.firewatchgame.com/images/parallax/parallax{layer}.png\"\n\t\t\talt=\"parallax layer {layer}\"\n\t\t/>\n\t{/each}\n</a>\n\n<div class=\"text\">\n\t<span style=\"opacity: {1 - Math.max(0, y / 40)}\"> scroll down </span>\n\n\t<div class=\"foreground\">\n\t\tYou have scrolled {y} pixels\n\t</div>\n</div>\n\n<style>\n\t.parallax-container {\n\t\tposition: fixed;\n\t\twidth: 2400px;\n\t\theight: 712px;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, 0);\n\t}\n\n\t.parallax-container img {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\twill-change: transform;\n\t}\n\n\t.parallax-container img:last-child::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: rgb(45, 10, 13);\n\t}\n\n\t.text {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 300vh;\n\t\tcolor: rgb(220, 113, 43);\n\t\ttext-align: center;\n\t\tpadding: 4em 0.5em 0.5em 0.5em;\n\t\tbox-sizing: border-box;\n\t\tpointer-events: none;\n\t}\n\n\tspan {\n\t\tdisplay: block;\n\t\tfont-size: 1em;\n\t\ttext-transform: uppercase;\n\t\twill-change: transform, opacity;\n\t}\n\n\t.foreground {\n\t\tposition: absolute;\n\t\ttop: 711px;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: calc(100% - 712px);\n\t\tbackground-color: rgb(32, 0, 1);\n\t\tcolor: white;\n\t\tpadding: 50vh 0 0 0;\n\t}\n\n\t:global(body) {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tbackground-color: rgb(253, 174, 51);\n\t}\n</style>\n"}]},{"title":"<svelte:document>","slug":"svelte-document","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet selection = '';\n\n\tconst handleSelectionChange = (e) => (selection = document.getSelection());\n</script>\n\n<svelte:document on:selectionchange={handleSelectionChange} />\n\n<p>Select this text to fire events</p>\n<p>Selection: {selection}</p>\n"}]},{"title":"<svelte:body>","slug":"svelte-body","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet hereKitty = false;\n\n\tconst handleMouseenter = () => (hereKitty = true);\n\tconst handleMouseleave = () => (hereKitty = false);\n</script>\n\n<svelte:body on:mouseenter={handleMouseenter} on:mouseleave={handleMouseleave} />\n\n<!-- creative commons BY-NC http://www.pngall.com/kitten-png/download/7247 -->\n<img\n\tclass:curious={hereKitty}\n\talt=\"Kitten wants to know what's going on\"\n\tsrc=\"/tutorial/kitten.png\"\n/>\n\n<style>\n\timg {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tbottom: -60px;\n\t\ttransform: translate(-80%, 0) rotate(-30deg);\n\t\ttransform-origin: 100% 100%;\n\t\ttransition: transform 0.4s;\n\t}\n\n\t.curious {\n\t\ttransform: translate(-15%, 0) rotate(0deg);\n\t}\n\n\t:global(body) {\n\t\toverflow: hidden;\n\t}\n</style>\n"}]},{"title":"<svelte:head>","slug":"svelte-head","files":[{"name":"App.svelte","type":"svelte","content":"<svelte:head>\n\t<link rel=\"stylesheet\" href=\"/tutorial/dark-theme.css\" />\n</svelte:head>\n\n<h1>Hello world!</h1>\n"}]}]},{"title":"Module context","slug":"module-context","examples":[{"title":"Named exports","slug":"module-exports","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport AudioPlayer, { stopAll } from './AudioPlayer.svelte';\n</script>\n\n<button on:click={stopAll}> stop all audio </button>\n\n<!-- https://musopen.org/music/9862-the-blue-danube-op-314/ -->\n<AudioPlayer\n\tsrc=\"https://sveltejs.github.io/assets/music/strauss.mp3\"\n\ttitle=\"The Blue Danube Waltz\"\n\tcomposer=\"Johann Strauss\"\n\tperformer=\"European Archive\"\n/>\n\n<!-- https://musopen.org/music/43775-the-planets-op-32/ -->\n<AudioPlayer\n\tsrc=\"https://sveltejs.github.io/assets/music/holst.mp3\"\n\ttitle=\"Mars, the Bringer of War\"\n\tcomposer=\"Gustav Holst\"\n\tperformer=\"USAF Heritage of America Band\"\n/>\n\n<!-- https://musopen.org/music/8010-3-gymnopedies/ -->\n<AudioPlayer\n\tsrc=\"https://sveltejs.github.io/assets/music/satie.mp3\"\n\ttitle=\"Gymnopédie no. 1\"\n\tcomposer=\"Erik Satie\"\n\tperformer=\"Prodigal Procrastinator\"\n/>\n\n<!-- https://musopen.org/music/2567-symphony-no-5-in-c-minor-op-67/ -->\n<AudioPlayer\n\tsrc=\"https://sveltejs.github.io/assets/music/beethoven.mp3\"\n\ttitle=\"Symphony no. 5 in Cm, Op. 67 - I. Allegro con brio\"\n\tcomposer=\"Ludwig van Beethoven\"\n\tperformer=\"European Archive\"\n/>\n\n<!-- https://musopen.org/music/43683-requiem-in-d-minor-k-626/ -->\n<AudioPlayer\n\tsrc=\"https://sveltejs.github.io/assets/music/mozart.mp3\"\n\ttitle=\"Requiem in D minor, K. 626 - III. Sequence - Lacrymosa\"\n\tcomposer=\"Wolfgang Amadeus Mozart\"\n\tperformer=\"Markus Staab\"\n/>\n"},{"name":"AudioPlayer.svelte","type":"svelte","content":"<script context=\"module\">\n\tconst elements = new Set();\n\n\texport function stopAll() {\n\t\telements.forEach((element) => {\n\t\t\telement.pause();\n\t\t});\n\t}\n</script>\n\n<script>\n\timport { onMount } from 'svelte';\n\n\texport let src;\n\texport let title;\n\texport let composer;\n\texport let performer;\n\n\tlet audio;\n\tlet paused = true;\n\n\tonMount(() => {\n\t\telements.add(audio);\n\t\treturn () => elements.delete(audio);\n\t});\n\n\tfunction stopOthers() {\n\t\telements.forEach((element) => {\n\t\t\tif (element !== audio) element.pause();\n\t\t});\n\t}\n</script>\n\n<article class:playing={!paused}>\n\t<h2>{title}</h2>\n\t<p><strong>{composer}</strong> / performed by {performer}</p>\n\n\t<audio bind:this={audio} bind:paused on:play={stopOthers} controls {src} />\n</article>\n\n<style>\n\tarticle {\n\t\tmargin: 0 0 1em 0;\n\t\tmax-width: 800px;\n\t}\n\th2,\n\tp {\n\t\tmargin: 0 0 0.3em 0;\n\t}\n\taudio {\n\t\twidth: 100%;\n\t\tmargin: 0.5em 0 1em 0;\n\t}\n\t.playing {\n\t\tcolor: #ff3e00;\n\t}\n</style>\n"}]}]},{"title":"Debugging","slug":"debugging","examples":[{"title":"The @debug tag","slug":"debug","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet user = {\n\t\tfirstname: 'Ada',\n\t\tlastname: 'Lovelace'\n\t};\n</script>\n\n<input bind:value={user.firstname} />\n<input bind:value={user.lastname} />\n\n{@debug user}\n\n<h1>Hello {user.firstname}!</h1>\n"}]}]},{"title":"7GUIs","slug":"7guis","examples":[{"title":"Counter","slug":"7guis-counter","files":[{"name":"App.svelte","type":"svelte","content":"<!-- https://eugenkiss.github.io/7guis/tasks#counter -->\n<script>\n\tlet count = 0;\n</script>\n\n<input type=\"number\" bind:value={count} />\n<button on:click={() => (count += 1)}>count</button>\n"}]},{"title":"Temperature Converter","slug":"7guis-temperature","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet c = 0;\n\tlet f = 32;\n\n\tfunction setBothFromC(value) {\n\t\tc = +value;\n\t\tf = +(32 + (9 / 5) * c).toFixed(1);\n\t}\n\n\tfunction setBothFromF(value) {\n\t\tf = +value;\n\t\tc = +((5 / 9) * (f - 32)).toFixed(1);\n\t}\n</script>\n\n<!-- https://eugenkiss.github.io/7guis/tasks/#temp -->\n<input value={c} on:input={(e) => setBothFromC(e.target.value)} type=\"number\" /> °C =\n<input value={f} on:input={(e) => setBothFromF(e.target.value)} type=\"number\" /> °F\n\n<style>\n\tinput {\n\t\twidth: 5em;\n\t}\n</style>\n"}]},{"title":"Flight booker","slug":"7guis-flight-booker","files":[{"name":"App.svelte","type":"svelte","content":"<!-- https://eugenkiss.github.io/7guis/tasks/#flight -->\n<script>\n\tconst tomorrow = new Date(Date.now() + 86400000);\n\n\tlet start = [\n\t\ttomorrow.getFullYear(),\n\t\tpad(tomorrow.getMonth() + 1, 2),\n\t\tpad(tomorrow.getDate(), 2)\n\t].join('-');\n\n\tlet end = start;\n\tlet isReturn = false;\n\n\t$: startDate = convertToDate(start);\n\t$: endDate = convertToDate(end);\n\n\tfunction bookFlight() {\n\t\tconst type = isReturn ? 'return' : 'one-way';\n\n\t\tlet message = `You have booked a ${type} flight, leaving ${startDate.toDateString()}`;\n\t\tif (type === 'return') {\n\t\t\tmessage += ` and returning ${endDate.toDateString()}`;\n\t\t}\n\n\t\talert(message);\n\t}\n\n\tfunction convertToDate(str) {\n\t\tconst split = str.split('-');\n\t\treturn new Date(+split[0], +split[1] - 1, +split[2]);\n\t}\n\n\tfunction pad(x, len) {\n\t\tx = String(x);\n\t\twhile (x.length < len) x = `0${x}`;\n\t\treturn x;\n\t}\n</script>\n\n<select bind:value={isReturn}>\n\t<option value={false}>one-way flight</option>\n\t<option value={true}>return flight</option>\n</select>\n\n<input type=\"date\" bind:value={start} />\n<input type=\"date\" bind:value={end} disabled={!isReturn} />\n\n<button on:click={bookFlight} disabled={isReturn && startDate >= endDate}>book</button>\n\n<style>\n\tselect,\n\tinput,\n\tbutton {\n\t\tdisplay: block;\n\t\tmargin: 0.5em 0;\n\t\tfont-size: inherit;\n\t}\n</style>\n"}]},{"title":"Timer","slug":"7guis-timer","files":[{"name":"App.svelte","type":"svelte","content":"<!-- https://eugenkiss.github.io/7guis/tasks#timer -->\n\n<script>\n\timport { onDestroy } from 'svelte';\n\n\tlet elapsed = 0;\n\tlet duration = 5000;\n\n\tlet last_time = window.performance.now();\n\tlet frame;\n\n\t(function update() {\n\t\tframe = requestAnimationFrame(update);\n\n\t\tconst time = window.performance.now();\n\t\telapsed += Math.min(time - last_time, duration - elapsed);\n\n\t\tlast_time = time;\n\t})();\n\n\tonDestroy(() => {\n\t\tcancelAnimationFrame(frame);\n\t});\n</script>\n\n<label>\n\telapsed time:\n\t<progress value={elapsed / duration} />\n</label>\n\n<div>{(elapsed / 1000).toFixed(1)}s</div>\n\n<label>\n\tduration:\n\t<input type=\"range\" bind:value={duration} min=\"1\" max=\"20000\" />\n</label>\n\n<button on:click={() => (elapsed = 0)}>reset</button>\n"}]},{"title":"CRUD","slug":"7guis-crud","files":[{"name":"App.svelte","type":"svelte","content":"<!-- https://eugenkiss.github.io/7guis/tasks#crud -->\n\n<script>\n\tlet people = [\n\t\t{ first: 'Hans', last: 'Emil' },\n\t\t{ first: 'Max', last: 'Mustermann' },\n\t\t{ first: 'Roman', last: 'Tisch' }\n\t];\n\n\tlet prefix = '';\n\tlet first = '';\n\tlet last = '';\n\tlet i = 0;\n\n\t$: filteredPeople = prefix\n\t\t? people.filter((person) => {\n\t\t\t\tconst name = `${person.last}, ${person.first}`;\n\t\t\t\treturn name.toLowerCase().startsWith(prefix.toLowerCase());\n\t\t  })\n\t\t: people;\n\n\t$: selected = filteredPeople[i];\n\n\t$: reset_inputs(selected);\n\n\tfunction create() {\n\t\tpeople = people.concat({ first, last });\n\t\ti = people.length - 1;\n\t\tfirst = last = '';\n\t}\n\n\tfunction update() {\n\t\tselected.first = first;\n\t\tselected.last = last;\n\t\tpeople = people;\n\t}\n\n\tfunction remove() {\n\t\t// Remove selected person from the source array (people), not the filtered array\n\t\tconst index = people.indexOf(selected);\n\t\tpeople = [...people.slice(0, index), ...people.slice(index + 1)];\n\n\t\tfirst = last = '';\n\t\ti = Math.min(i, filteredPeople.length - 2);\n\t}\n\n\tfunction reset_inputs(person) {\n\t\tfirst = person ? person.first : '';\n\t\tlast = person ? person.last : '';\n\t}\n</script>\n\n<input placeholder=\"filter prefix\" bind:value={prefix} />\n\n<select bind:value={i} size={5}>\n\t{#each filteredPeople as person, i}\n\t\t<option value={i}>{person.last}, {person.first}</option>\n\t{/each}\n</select>\n\n<label><input bind:value={first} placeholder=\"first\" /></label>\n<label><input bind:value={last} placeholder=\"last\" /></label>\n\n<div class=\"buttons\">\n\t<button on:click={create} disabled={!first || !last}>create</button>\n\t<button on:click={update} disabled={!first || !last || !selected}>update</button>\n\t<button on:click={remove} disabled={!selected}>delete</button>\n</div>\n\n<style>\n\t* {\n\t\tfont-family: inherit;\n\t\tfont-size: inherit;\n\t}\n\n\tinput {\n\t\tdisplay: block;\n\t\tmargin: 0 0 0.5em 0;\n\t}\n\n\tselect {\n\t\tfloat: left;\n\t\tmargin: 0 1em 1em 0;\n\t\twidth: 14em;\n\t}\n\n\t.buttons {\n\t\tclear: both;\n\t}\n</style>\n"}]},{"title":"Circle Drawer","slug":"7guis-circles","files":[{"name":"App.svelte","type":"svelte","content":"<!--\nhttps://eugenkiss.github.io/7guis/tasks#circle\n\nClick on the canvas to draw a circle. Click on a circle\nto select it. Right-click on the canvas to adjust the\nradius of the selected circle.\n-->\n\n<script>\n\tlet i = 0;\n\tlet undoStack = [[]];\n\tlet circles = [];\n\tlet selected;\n\tlet adjusting = false;\n\tlet adjusted = false;\n\n\tfunction handleClick(event) {\n\t\tif (adjusting) {\n\t\t\tadjusting = false;\n\n\t\t\t// if circle was adjusted,\n\t\t\t// push to the stack\n\t\t\tif (adjusted) push();\n\t\t\treturn;\n\t\t}\n\n\t\tconst circle = {\n\t\t\tcx: event.clientX,\n\t\t\tcy: event.clientY,\n\t\t\tr: 50\n\t\t};\n\n\t\tcircles = circles.concat(circle);\n\t\tselected = circle;\n\n\t\tpush();\n\t}\n\n\tfunction adjust(event) {\n\t\tselected.r = +event.target.value;\n\t\tcircles = circles;\n\t\tadjusted = true;\n\t}\n\n\tfunction select(circle, event) {\n\t\tif (!adjusting) {\n\t\t\tevent.stopPropagation();\n\t\t\tselected = circle;\n\t\t}\n\t}\n\n\tfunction push() {\n\t\tconst newUndoStack = undoStack.slice(0, ++i);\n\t\tnewUndoStack.push(clone(circles));\n\t\tundoStack = newUndoStack;\n\t}\n\n\tfunction travel(d) {\n\t\tcircles = clone(undoStack[(i += d)]);\n\t\tadjusting = false;\n\t}\n\n\tfunction clone(circles) {\n\t\treturn circles.map(({ cx, cy, r }) => ({ cx, cy, r }));\n\t}\n</script>\n\n<div class=\"controls\">\n\t<button on:click={() => travel(-1)} disabled={i === 0}>undo</button>\n\t<button on:click={() => travel(+1)} disabled={i === undoStack.length - 1}>redo</button>\n</div>\n<!-- svelte-ignore a11y-click-events-have-key-events a11y-no-static-element-interactions -->\n<svg on:click={handleClick}>\n\t{#each circles as circle}\n\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t<circle\n\t\t\tcx={circle.cx}\n\t\t\tcy={circle.cy}\n\t\t\tr={circle.r}\n\t\t\ton:click={(event) => select(circle, event)}\n\t\t\ton:contextmenu|stopPropagation|preventDefault={() => {\n\t\t\t\tadjusting = !adjusting;\n\t\t\t\tif (adjusting) selected = circle;\n\t\t\t}}\n\t\t\tfill={circle === selected ? '#ccc' : 'white'}\n\t\t/>\n\t{/each}\n</svg>\n\n{#if adjusting}\n\t<div class=\"adjuster\">\n\t\t<p>adjust diameter of circle at {selected.cx}, {selected.cy}</p>\n\t\t<input type=\"range\" value={selected.r} on:input={adjust} />\n\t</div>\n{/if}\n\n<style>\n\t.controls {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\ttext-align: center;\n\t}\n\n\tsvg {\n\t\tbackground-color: #eee;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\tcircle {\n\t\tstroke: black;\n\t}\n\n\t.adjuster {\n\t\tposition: absolute;\n\t\twidth: 80%;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tpadding: 1em;\n\t\ttext-align: center;\n\t\tbackground-color: rgba(255, 255, 255, 0.7);\n\t\tborder-radius: 4px;\n\t}\n\n\tinput[type='range'] {\n\t\twidth: 100%;\n\t}\n</style>\n"}]}]},{"title":"Miscellaneous","slug":"miscellaneous","examples":[{"title":"Hacker News","slug":"hacker-news","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { onMount } from 'svelte';\n\timport List from './List.svelte';\n\timport Item from './Item.svelte';\n\n\tlet item;\n\tlet page;\n\n\tasync function hashchange() {\n\t\t// the poor man's router!\n\t\tconst path = window.location.hash.slice(1);\n\n\t\tif (path.startsWith('/item')) {\n\t\t\tconst id = path.slice(6);\n\t\t\titem = await fetch(`https://node-hnapi.herokuapp.com/item/${id}`).then((r) => r.json());\n\n\t\t\twindow.scrollTo(0, 0);\n\t\t} else if (path.startsWith('/top')) {\n\t\t\tpage = +path.slice(5);\n\t\t\titem = null;\n\t\t} else {\n\t\t\twindow.location.hash = '/top/1';\n\t\t}\n\t}\n\n\tonMount(hashchange);\n</script>\n\n<svelte:window on:hashchange={hashchange} />\n\n<main>\n\t{#if item}\n\t\t<Item {item} returnTo=\"#/top/{page}\" />\n\t{:else if page}\n\t\t<List {page} />\n\t{/if}\n</main>\n\n<style>\n\tmain {\n\t\tposition: relative;\n\t\tmax-width: 800px;\n\t\tmargin: 0 auto;\n\t\tmin-height: 101vh;\n\t\tpadding: 1em;\n\t}\n\n\tmain :global(.meta) {\n\t\tcolor: #999;\n\t\tfont-size: 12px;\n\t\tmargin: 0 0 1em 0;\n\t}\n</style>\n"},{"name":"Comment.svelte","type":"svelte","content":"<script>\n\texport let comment;\n</script>\n\n<article>\n\t<p class=\"meta\">{comment.user} {comment.time_ago}</p>\n\n\t{@html comment.content}\n\n\t<div class=\"replies\">\n\t\t{#each comment.comments as child}\n\t\t\t<svelte:self comment={child} />\n\t\t{/each}\n\t</div>\n</article>\n\n<style>\n\tarticle {\n\t\tborder-top: 1px solid #eee;\n\t\tmargin: 1em 0 0 0;\n\t\tpadding: 1em 0 0 0;\n\t\tfont-size: 14px;\n\t}\n\n\t.meta {\n\t\tcolor: #999;\n\t}\n\n\t.replies {\n\t\tpadding: 0 0 0 1em;\n\t}\n</style>\n"},{"name":"Item.svelte","type":"svelte","content":"<script>\n\timport Comment from './Comment.svelte';\n\n\texport let item;\n\texport let returnTo;\n\n\t$: url = !item.domain ? `https://news.ycombinator.com/${item.url}` : item.url;\n</script>\n\n<a href={returnTo}>&laquo; back</a>\n\n<article>\n\t<a href={url}>\n\t\t<h1>{item.title}</h1>\n\t\t{#if item.domain}\n\t\t\t<small>{item.domain}</small>\n\t\t{/if}\n\t</a>\n\n\t<p class=\"meta\">submitted by {item.user} {item.time_ago}</p>\n</article>\n\n<div class=\"comments\">\n\t{#each item.comments as comment}\n\t\t<Comment {comment} />\n\t{/each}\n</div>\n\n<style>\n\tarticle {\n\t\tmargin: 0 0 1em 0;\n\t}\n\n\ta {\n\t\tdisplay: block;\n\t\tmargin: 0 0 1em 0;\n\t}\n\n\th1 {\n\t\tfont-size: 1.4em;\n\t\tmargin: 0;\n\t}\n</style>\n"},{"name":"List.svelte","type":"svelte","content":"<script>\n\timport { beforeUpdate } from 'svelte';\n\timport Summary from './Summary.svelte';\n\n\tconst PAGE_SIZE = 20;\n\n\texport let page;\n\n\tlet items;\n\tlet offset;\n\n\t$: fetch(`https://node-hnapi.herokuapp.com/news?page=${page}`)\n\t\t.then((r) => r.json())\n\t\t.then((data) => {\n\t\t\titems = data;\n\t\t\toffset = PAGE_SIZE * (page - 1);\n\t\t\twindow.scrollTo(0, 0);\n\t\t});\n</script>\n\n{#if items}\n\t{#each items as item, i}\n\t\t<Summary {item} {i} {offset} />\n\t{/each}\n\n\t<a href=\"#/top/{page + 1}\">page {page + 1}</a>\n{:else}\n\t<p class=\"loading\">loading...</p>\n{/if}\n\n<style>\n\ta {\n\t\tpadding: 2em;\n\t\tdisplay: block;\n\t}\n\n\t.loading {\n\t\topacity: 0;\n\t\tanimation: 0.4s 0.8s forwards fade-in;\n\t}\n\n\t@keyframes fade-in {\n\t\tfrom {\n\t\t\topacity: 0;\n\t\t}\n\t\tto {\n\t\t\topacity: 1;\n\t\t}\n\t}\n</style>\n"},{"name":"Summary.svelte","type":"svelte","content":"<script>\n\texport let item;\n\texport let i;\n\texport let offset;\n\n\tfunction comment_text() {\n\t\tconst c = item.comments_count;\n\t\treturn `${c} ${c === 1 ? 'comment' : 'comments'}`;\n\t}\n\n\t$: url = item.type === 'ask' ? `https://news.ycombinator.com/${item.url}` : item.url;\n</script>\n\n<article>\n\t<span>{i + offset + 1}</span>\n\t<h2><a target=\"_blank\" rel=\"noreferrer\" href={url}>{item.title}</a></h2>\n\t<p class=\"meta\"><a href=\"#/item/{item.id}\">{comment_text()}</a> by {item.user} {item.time_ago}</p>\n</article>\n\n<style>\n\tarticle {\n\t\tposition: relative;\n\t\tpadding: 0 0 0 2em;\n\t\tborder-bottom: 1px solid #eee;\n\t}\n\n\th2 {\n\t\tfont-size: 1em;\n\t\tmargin: 0.5em 0;\n\t}\n\n\tspan {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t}\n</style>\n"}]},{"title":"Immutable data","slug":"immutable-data","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport ImmutableTodo from './ImmutableTodo.svelte';\n\timport MutableTodo from './MutableTodo.svelte';\n\n\tlet todos = [\n\t\t{ id: 1, done: true, text: 'wash the car' },\n\t\t{ id: 2, done: false, text: 'take the dog for a walk' },\n\t\t{ id: 3, done: false, text: 'mow the lawn' }\n\t];\n\n\tfunction toggle(id) {\n\t\ttodos = todos.map((todo) => {\n\t\t\tif (todo.id === id) {\n\t\t\t\t// return a new object\n\t\t\t\treturn {\n\t\t\t\t\tid,\n\t\t\t\t\tdone: !todo.done,\n\t\t\t\t\ttext: todo.text\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// return the same object\n\t\t\treturn todo;\n\t\t});\n\t}\n</script>\n\n<h2>Immutable</h2>\n{#each todos as todo}\n\t<ImmutableTodo {todo} on:click={() => toggle(todo.id)} /><br />\n{/each}\n\n<h2>Mutable</h2>\n{#each todos as todo}\n\t<MutableTodo {todo} on:click={() => toggle(todo.id)} /><br />\n{/each}\n"},{"name":"ImmutableTodo.svelte","type":"svelte","content":"<svelte:options immutable />\n\n<script>\n\timport { afterUpdate } from 'svelte';\n\timport flash from './flash.js';\n\n\texport let todo;\n\n\tlet btn;\n\n\tafterUpdate(() => {\n\t\tflash(btn);\n\t});\n</script>\n\n<!-- the text will flash red whenever\n\t\tthe `todo` object changes -->\n<button bind:this={btn} on:click>\n\t{todo.done ? '👍' : ''}\n\t{todo.text}\n</button>\n\n<style>\n\tbutton {\n\t\tcursor: pointer;\n\t\tborder: none;\n\t\tbackground: none;\n\t\tfont-size: 14px;\n\t}\n</style>\n"},{"name":"MutableTodo.svelte","type":"svelte","content":"<script>\n\timport { afterUpdate } from 'svelte';\n\timport flash from './flash.js';\n\n\texport let todo;\n\n\tlet btn;\n\n\tafterUpdate(() => {\n\t\tflash(btn);\n\t});\n</script>\n\n<!-- the text will flash red whenever\n\t\tthe `todo` object changes -->\n<button bind:this={btn}>\n\t{todo.done ? '👍' : ''}\n\t{todo.text}\n</button>\n\n<style>\n\tbutton {\n\t\tcursor: pointer;\n\t\tborder: none;\n\t\tbackground: none;\n\t\tfont-size: 14px;\n\t}\n</style>\n"},{"name":"flash.js","type":"js","content":"export default function flash(element) {\n\trequestAnimationFrame(() => {\n\t\telement.style.transition = 'none';\n\t\telement.style.color = 'rgba(255,62,0,1)';\n\t\telement.style.backgroundColor = 'rgba(255,62,0,0.2)';\n\n\t\tsetTimeout(() => {\n\t\t\telement.style.transition = 'color 1s, background 1s';\n\t\t\telement.style.color = '';\n\t\t\telement.style.backgroundColor = '';\n\t\t});\n\t});\n}\n"}]}]},{"title":"Embeds","slug":"embeds","examples":[{"title":"-","slug":"blog-svelte-css-in-js","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\timport { comicSans, link } from './styles.js';\n\timport Hero from './Hero.svelte';\n</script>\n\n<Hero />\n\n<div class={comicSans}>\n\t<p>\n\t\tDid you enjoy your lunch, mom? You drank it fast enough. I know, I just call her Annabelle cause\n\t\tshe's shaped like a…she's the belle of the ball! YOU'RE the Chiclet! Not me. Caw ca caw, caw ca\n\t\tcaw, caw ca caw! A Colombian cartel that WON'T kidnap and kill you. You go buy a tape recorder\n\t\tand record yourself for a whole day. <a class={link} href=\"https://bluthipsum.com/\"\n\t\t\t>I think you'll be surprised at some of your phrasing.</a\n\t\t>\n\t</p>\n</div>\n"},{"name":"Hero.svelte","type":"svelte","content":"<script>\n\timport { title, comicSans, box } from './styles.js';\n</script>\n\n<div class=\"{title} {comicSans}\">\n\t<h1>\n\t\t<div class={box}>\n\t\t\t<div class={box}>\n\t\t\t\t<div class={box}>CSS</div>\n\t\t\t\tin JS\n\t\t\t</div>\n\t\t\tin HTML\n\t\t</div>\n\t</h1>\n</div>\n"},{"name":"styles.js","type":"js","content":"import emotion from '@emotion/css@11.1.3/dist/emotion-css.umd.min.js';\n\nconst { css } = emotion;\n\nconst brand = '#74D900';\n\nexport const title = css`\n\tcolor: ${brand};\n\tfont-size: 1em;\n\twhite-space: nowrap;\n`;\n\nexport const comicSans = css`\n\tfont-family: 'Comic Sans MS', cursive;\n`;\n\nexport const box = css`\n\tposition: relative;\n\tdisplay: inline-block;\n\tborder: 2px solid ${brand};\n\tline-height: 1;\n\tpadding: 4px;\n\tborder-radius: 4px;\n`;\n\nexport const link = css`\n\tcolor: inherit;\n\tfont-weight: bold;\n\ttext-decoration: none;\n\tborder-bottom: 1px solid ${brand};\n\t&:hover {\n\t\ttext-decoration: none;\n\t\tbackground: ${brand};\n\t}\n`;\n"}]},{"title":"-","slug":"blog-write-less-code","files":[{"name":"App.svelte","type":"svelte","content":"<script>\n\tlet a = 1;\n\tlet b = 2;\n</script>\n\n<input type=\"number\" bind:value={a} />\n<input type=\"number\" bind:value={b} />\n\n<p>{a} + {b} = {a + b}</p>\n"}]}]}]
